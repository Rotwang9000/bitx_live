{"version":3,"file":"static/js/65.2b2b5d1c.chunk.js","mappings":"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","sources":["../node_modules/.pnpm/@ledgerhq+hw-app-cosmos@6.29.4/node_modules/@ledgerhq/hw-app-cosmos/lib-es/Cosmos.js","../node_modules/.pnpm/@ledgerhq+errors@6.16.2/node_modules/@ledgerhq/errors/lib-es/helpers.js","../node_modules/.pnpm/@ledgerhq+errors@6.16.2/node_modules/@ledgerhq/errors/lib-es/index.js","../node_modules/.pnpm/bip32-path@0.4.2/node_modules/bip32-path/index.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport BIPPath from \"bip32-path\";\nimport { UserRefusedOnDevice } from \"@ledgerhq/errors\";\nconst CHUNK_SIZE = 250;\nconst CLA = 0x55;\nconst APP_KEY = \"CSM\";\nconst INS_GET_VERSION = 0x00;\nconst INS_SIGN_SECP256K1 = 0x02;\nconst INS_GET_ADDR_SECP256K1 = 0x04;\nconst PAYLOAD_TYPE_INIT = 0x00;\nconst PAYLOAD_TYPE_ADD = 0x01;\nconst PAYLOAD_TYPE_LAST = 0x02;\nconst SW_OK = 0x9000;\nconst SW_CANCEL = 0x6986;\n/**\n * Cosmos API\n *\n * @example\n * import Cosmos from \"@ledgerhq/hw-app-cosmos\";\n * const cosmos = new Cosmos(transport)\n */\nexport default class Cosmos {\n    constructor(transport, scrambleKey = APP_KEY) {\n        this.transport = transport;\n        transport.decorateAppAPIMethods(this, [\"getAddress\", \"sign\", \"getAppConfiguration\"], scrambleKey);\n    }\n    // FIXME: understand what is going on with the return type here\n    getAppConfiguration() {\n        return this.transport.send(CLA, INS_GET_VERSION, 0, 0).then(response => {\n            return {\n                test_mode: response[0] !== 0,\n                version: \"\" + response[1] + \".\" + response[2] + \".\" + response[3],\n                device_locked: response[4] === 1,\n                major: response[1],\n            };\n        });\n    }\n    serializePath(path) {\n        const buf = Buffer.alloc(20);\n        // HACK : without the >>>,\n        // the bitwise implicitly casts the result to be a signed int32,\n        // which fails the internal type check of Buffer in case of overload.\n        buf.writeUInt32LE((0x80000000 | path[0]) >>> 0, 0);\n        buf.writeUInt32LE((0x80000000 | path[1]) >>> 0, 4);\n        buf.writeUInt32LE((0x80000000 | path[2]) >>> 0, 8);\n        buf.writeUInt32LE(path[3], 12);\n        buf.writeUInt32LE(path[4], 16);\n        return buf;\n    }\n    serializeHRP(hrp) {\n        if (hrp == null || hrp.length === 0 || hrp.length > 83) {\n            throw new Error(\"Invalid HRP\");\n        }\n        const buf = Buffer.alloc(1 + hrp.length);\n        buf.writeUInt8(hrp.length, 0);\n        buf.write(hrp, 1);\n        return buf;\n    }\n    /**\n     * get Cosmos address for a given BIP 32 path.\n     * @param path a path in BIP 32 format\n     * @param hrp usually cosmos\n     * @option boolDisplay optionally enable or not the display\n     * @return an object with a publicKey, address and (optionally) chainCode\n     * @example\n     * cosmos.getAddress(\"44'/60'/0'/0/0\", \"cosmos\").then(o => o.address)\n     */\n    getAddress(path, hrp, boolDisplay) {\n        const bipPath = BIPPath.fromString(path).toPathArray();\n        const serializedPath = this.serializePath(bipPath);\n        const data = Buffer.concat([this.serializeHRP(hrp), serializedPath]);\n        return this.transport\n            .send(CLA, INS_GET_ADDR_SECP256K1, boolDisplay ? 1 : 0, 0, data, [SW_OK])\n            .then(response => {\n            const address = Buffer.from(response.slice(33, -2)).toString();\n            const publicKey = Buffer.from(response.slice(0, 33)).toString(\"hex\");\n            return {\n                address,\n                publicKey,\n            };\n        });\n    }\n    foreach(arr, callback) {\n        function iterate(index, array, result) {\n            if (index >= array.length) {\n                return result;\n            }\n            else\n                return callback(array[index], index).then(function (res) {\n                    result.push(res);\n                    return iterate(index + 1, array, result);\n                });\n        }\n        return Promise.resolve().then(() => iterate(0, arr, []));\n    }\n    sign(path, message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bipPath = BIPPath.fromString(path).toPathArray();\n            const serializedPath = this.serializePath(bipPath);\n            const chunks = [];\n            chunks.push(serializedPath);\n            const buffer = Buffer.from(message);\n            for (let i = 0; i < buffer.length; i += CHUNK_SIZE) {\n                let end = i + CHUNK_SIZE;\n                if (i > buffer.length) {\n                    end = buffer.length;\n                }\n                chunks.push(buffer.slice(i, end));\n            }\n            let response = {};\n            return this.foreach(chunks, (data, j) => this.transport\n                .send(CLA, INS_SIGN_SECP256K1, j === 0\n                ? PAYLOAD_TYPE_INIT\n                : j + 1 === chunks.length\n                    ? PAYLOAD_TYPE_LAST\n                    : PAYLOAD_TYPE_ADD, 0, data, [SW_OK, SW_CANCEL])\n                .then(apduResponse => (response = apduResponse))).then(() => {\n                const errorCodeData = response.slice(-2);\n                const returnCode = errorCodeData[0] * 256 + errorCodeData[1];\n                let signature = null;\n                if (response.length > 2) {\n                    signature = response.slice(0, response.length - 2);\n                }\n                if (returnCode === 0x6986) {\n                    throw new UserRefusedOnDevice();\n                }\n                return {\n                    signature,\n                    return_code: returnCode,\n                };\n            });\n        });\n    }\n}\n//# sourceMappingURL=Cosmos.js.map","/* eslint-disable no-continue */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\nconst errorClasses = {};\nconst deserializers = {};\nexport const addCustomErrorDeserializer = (name, deserializer) => {\n    deserializers[name] = deserializer;\n};\nexport const createCustomErrorClass = (name) => {\n    class CustomErrorClass extends Error {\n        constructor(message, fields, options) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            super(message || name, options);\n            // Set the prototype explicitly. See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n            Object.setPrototypeOf(this, CustomErrorClass.prototype);\n            this.name = name;\n            if (fields) {\n                for (const k in fields) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    this[k] = fields[k];\n                }\n            }\n            if (options && isObject(options) && \"cause\" in options && !(\"cause\" in this)) {\n                // .cause was specified but the superconstructor\n                // did not create an instance property.\n                const cause = options.cause;\n                this.cause = cause;\n                if (\"stack\" in cause) {\n                    this.stack = this.stack + \"\\nCAUSE: \" + cause.stack;\n                }\n            }\n        }\n    }\n    errorClasses[name] = CustomErrorClass;\n    return CustomErrorClass;\n};\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n// inspired from https://github.com/programble/errio/blob/master/index.js\nexport const deserializeError = (object) => {\n    if (object && typeof object === \"object\") {\n        try {\n            if (typeof object.message === \"string\") {\n                const msg = JSON.parse(object.message);\n                if (msg.message && msg.name) {\n                    object = msg;\n                }\n            }\n        }\n        catch (e) {\n            // nothing\n        }\n        let error;\n        if (typeof object.name === \"string\") {\n            const { name } = object;\n            const des = deserializers[name];\n            if (des) {\n                error = des(object);\n            }\n            else {\n                let constructor = name === \"Error\" ? Error : errorClasses[name];\n                if (!constructor) {\n                    console.warn(\"deserializing an unknown class '\" + name + \"'\");\n                    constructor = createCustomErrorClass(name);\n                }\n                error = Object.create(constructor.prototype);\n                try {\n                    for (const prop in object) {\n                        if (object.hasOwnProperty(prop)) {\n                            error[prop] = object[prop];\n                        }\n                    }\n                }\n                catch (e) {\n                    // sometimes setting a property can fail (e.g. .name)\n                }\n            }\n        }\n        else {\n            if (typeof object.message === \"string\") {\n                error = new Error(object.message);\n            }\n        }\n        if (error && !error.stack && Error.captureStackTrace) {\n            Error.captureStackTrace(error, deserializeError);\n        }\n        return error;\n    }\n    return new Error(String(object));\n};\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nexport const serializeError = (value) => {\n    if (!value)\n        return value;\n    if (typeof value === \"object\") {\n        return destroyCircular(value, []);\n    }\n    if (typeof value === \"function\") {\n        return `[Function: ${value.name || \"anonymous\"}]`;\n    }\n    return value;\n};\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from, seen) {\n    const to = {};\n    seen.push(from);\n    for (const key of Object.keys(from)) {\n        const value = from[key];\n        if (typeof value === \"function\") {\n            continue;\n        }\n        if (!value || typeof value !== \"object\") {\n            to[key] = value;\n            continue;\n        }\n        if (seen.indexOf(from[key]) === -1) {\n            to[key] = destroyCircular(from[key], seen.slice(0));\n            continue;\n        }\n        to[key] = \"[Circular]\";\n    }\n    if (typeof from.name === \"string\") {\n        to.name = from.name;\n    }\n    if (typeof from.message === \"string\") {\n        to.message = from.message;\n    }\n    if (typeof from.stack === \"string\") {\n        to.stack = from.stack;\n    }\n    return to;\n}\n//# sourceMappingURL=helpers.js.map","import { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer, } from \"./helpers\";\nexport { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer };\nexport const AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\nexport const AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\nexport const ClaimRewardsFeesWarning = createCustomErrorClass(\"ClaimRewardsFeesWarning\");\nexport const CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\nexport const DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const DeviceNeedsRestart = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const UnresponsiveDeviceError = createCustomErrorClass(\"UnresponsiveDeviceError\");\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\nexport const DeviceExtractOnboardingStateError = createCustomErrorClass(\"DeviceExtractOnboardingStateError\");\nexport const DeviceOnboardingStatePollingError = createCustomErrorClass(\"DeviceOnboardingStatePollingError\");\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\nexport const FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\nexport const FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidNonce = createCustomErrorClass(\"InvalidNonce\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nexport const LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\nexport const LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\nexport const ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NetworkError = createCustomErrorClass(\"NetworkError\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\nexport const NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\n// Error message specifically for the PTX swap flow\nexport const NotEnoughGasSwap = createCustomErrorClass(\"NotEnoughGasSwap\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\nexport const GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\nexport const PriorityFeeTooLow = createCustomErrorClass(\"PriorityFeeTooLow\");\nexport const PriorityFeeTooHigh = createCustomErrorClass(\"PriorityFeeTooHigh\");\nexport const PriorityFeeHigherThanMaxFee = createCustomErrorClass(\"PriorityFeeHigherThanMaxFee\");\nexport const MaxFeeTooLow = createCustomErrorClass(\"MaxFeeTooLow\");\nexport const PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\nexport const PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\nexport const RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\nexport const UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\nexport const UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\nexport const UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\nexport const UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\nexport const UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nexport const ExpertModeRequired = createCustomErrorClass(\"ExpertModeRequired\");\nexport const TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\nexport const TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\nexport const TransactionHasBeenValidatedError = createCustomErrorClass(\"TransactionHasBeenValidatedError\");\nexport const TransportExchangeTimeoutError = createCustomErrorClass(\"TransportExchangeTimeoutError\");\nexport const DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\nexport const WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\nexport const WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\nexport const WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\nexport const WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeNotLoadedSwap = createCustomErrorClass(\"FeeNotLoadedSwap\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const PendingOperation = createCustomErrorClass(\"PendingOperation\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const PeerRemovedPairing = createCustomErrorClass(\"PeerRemovedPairing\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\n// SpeedUp / Cancel EVM tx\nexport const ReplacementTransactionUnderpriced = createCustomErrorClass(\"ReplacementTransactionUnderpriced\");\n// Bitcoin family\nexport const OpReturnDataSizeLimit = createCustomErrorClass(\"OpReturnSizeLimit\");\nexport const DustLimit = createCustomErrorClass(\"DustLimit\");\n// Language\nexport const LanguageNotFound = createCustomErrorClass(\"LanguageNotFound\");\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */\nexport var HwTransportErrorType;\n(function (HwTransportErrorType) {\n    HwTransportErrorType[\"Unknown\"] = \"Unknown\";\n    HwTransportErrorType[\"LocationServicesDisabled\"] = \"LocationServicesDisabled\";\n    HwTransportErrorType[\"LocationServicesUnauthorized\"] = \"LocationServicesUnauthorized\";\n    HwTransportErrorType[\"BluetoothScanStartFailed\"] = \"BluetoothScanStartFailed\";\n})(HwTransportErrorType || (HwTransportErrorType = {}));\n/**\n * Represents an error coming from the usage of any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */\nexport class HwTransportError extends Error {\n    constructor(type, message) {\n        super(message);\n        this.name = \"HwTransportError\";\n        this.type = type;\n        // Needed as long as we target < ES6\n        Object.setPrototypeOf(this, HwTransportError.prototype);\n    }\n}\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport class TransportError extends Error {\n    constructor(message, id) {\n        const name = \"TransportError\";\n        super(message || name);\n        this.name = name;\n        this.message = message;\n        this.stack = new Error(message).stack;\n        this.id = id;\n    }\n}\naddCustomErrorDeserializer(\"TransportError\", e => new TransportError(e.message, e.id));\nexport const StatusCodes = {\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\n    CLA_NOT_SUPPORTED: 0x6e00,\n    CODE_BLOCKED: 0x9840,\n    CODE_NOT_INITIALIZED: 0x9802,\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n    CONTRADICTION_INVALIDATION: 0x9810,\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n    CUSTOM_IMAGE_BOOTLOADER: 0x662f,\n    CUSTOM_IMAGE_EMPTY: 0x662e,\n    FILE_ALREADY_EXISTS: 0x6a89,\n    FILE_NOT_FOUND: 0x9404,\n    GP_AUTH_FAILED: 0x6300,\n    HALTED: 0x6faa,\n    INCONSISTENT_FILE: 0x9408,\n    INCORRECT_DATA: 0x6a80,\n    INCORRECT_LENGTH: 0x6700,\n    INCORRECT_P1_P2: 0x6b00,\n    INS_NOT_SUPPORTED: 0x6d00,\n    DEVICE_NOT_ONBOARDED: 0x6d07,\n    DEVICE_NOT_ONBOARDED_2: 0x6611,\n    INVALID_KCV: 0x9485,\n    INVALID_OFFSET: 0x9402,\n    LICENSING: 0x6f42,\n    LOCKED_DEVICE: 0x5515,\n    MAX_VALUE_REACHED: 0x9850,\n    MEMORY_PROBLEM: 0x9240,\n    MISSING_CRITICAL_PARAMETER: 0x6800,\n    NO_EF_SELECTED: 0x9400,\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n    OK: 0x9000,\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n    TECHNICAL_PROBLEM: 0x6f00,\n    UNKNOWN_APDU: 0x6d02,\n    USER_REFUSED_ON_DEVICE: 0x5501,\n    NOT_ENOUGH_SPACE: 0x5102,\n};\nexport function getAltStatusMessage(code) {\n    switch (code) {\n        // improve text of most common errors\n        case 0x6700:\n            return \"Incorrect length\";\n        case 0x6800:\n            return \"Missing critical parameter\";\n        case 0x6982:\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\n        case 0x6985:\n            return \"Condition of use not satisfied (denied by the user?)\";\n        case 0x6a80:\n            return \"Invalid data received\";\n        case 0x6b00:\n            return \"Invalid parameter received\";\n        case 0x5515:\n            return \"Locked device\";\n    }\n    if (0x6f00 <= code && code <= 0x6fff) {\n        return \"Internal error, please report\";\n    }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport class TransportStatusError extends Error {\n    /**\n     * @param statusCode The error status code coming from a Transport implementation\n     * @param options containing:\n     *  - canBeMappedToChildError: enable the mapping of TransportStatusError to an error extending/inheriting from it\n     *  . Ex: LockedDeviceError. Default to true.\n     */\n    constructor(statusCode, { canBeMappedToChildError = true } = {}) {\n        const statusText = Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) || \"UNKNOWN_ERROR\";\n        const smsg = getAltStatusMessage(statusCode) || statusText;\n        const statusCodeStr = statusCode.toString(16);\n        const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n        super(message);\n        this.name = \"TransportStatusError\";\n        this.statusCode = statusCode;\n        this.statusText = statusText;\n        Object.setPrototypeOf(this, TransportStatusError.prototype);\n        // Maps to a LockedDeviceError\n        if (canBeMappedToChildError && statusCode === StatusCodes.LOCKED_DEVICE) {\n            return new LockedDeviceError(message);\n        }\n    }\n}\nexport class LockedDeviceError extends TransportStatusError {\n    constructor(message) {\n        super(StatusCodes.LOCKED_DEVICE, { canBeMappedToChildError: false });\n        if (message) {\n            this.message = message;\n        }\n        this.name = \"LockedDeviceError\";\n        Object.setPrototypeOf(this, LockedDeviceError.prototype);\n    }\n}\naddCustomErrorDeserializer(\"TransportStatusError\", e => new TransportStatusError(e.statusCode));\n//# sourceMappingURL=index.js.map","/*\n * Bitcoin BIP32 path helpers\n * (C) 2016 Alex Beregszaszi\n */\n\nconst HARDENED = 0x80000000\n\nvar BIPPath = function (path) {\n  if (!Array.isArray(path)) {\n    throw new Error('Input must be an Array')\n  }\n  if (path.length === 0) {\n    throw new Error('Path must contain at least one level')\n  }\n  for (var i = 0; i < path.length; i++) {\n    if (typeof path[i] !== 'number') {\n      throw new Error('Path element is not a number')\n    }\n  }\n  this.path = path\n}\n\nBIPPath.validatePathArray = function (path) {\n  try {\n    BIPPath.fromPathArray(path)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nBIPPath.validateString = function (text, reqRoot) {\n  try {\n    BIPPath.fromString(text, reqRoot)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nBIPPath.fromPathArray = function (path) {\n  return new BIPPath(path)\n}\n\nBIPPath.fromString = function (text, reqRoot) {\n  // skip the root\n  if (/^m\\//i.test(text)) {\n    text = text.slice(2)\n  } else if (reqRoot) {\n    throw new Error('Root element is required')\n  }\n\n  var path = text.split('/')\n  var ret = new Array(path.length)\n  for (var i = 0; i < path.length; i++) {\n    var tmp = /(\\d+)([hH\\']?)/.exec(path[i])\n    if (tmp === null) {\n      throw new Error('Invalid input')\n    }\n    ret[i] = parseInt(tmp[1], 10)\n\n    if (ret[i] >= HARDENED) {\n      throw new Error('Invalid child index')\n    }\n\n    if (tmp[2] === 'h' || tmp[2] === 'H' || tmp[2] === '\\'') {\n      ret[i] += HARDENED\n    } else if (tmp[2].length != 0) {\n      throw new Error('Invalid modifier')\n    }\n  }\n  return new BIPPath(ret)\n}\n\nBIPPath.prototype.toPathArray = function () {\n  return this.path\n}\n\nBIPPath.prototype.toString = function (noRoot, oldStyle) {\n  var ret = new Array(this.path.length)\n  for (var i = 0; i < this.path.length; i++) {\n    var tmp = this.path[i]\n    if (tmp & HARDENED) {\n      ret[i] = (tmp & ~HARDENED) + (oldStyle ? 'h' : '\\'')\n    } else {\n      ret[i] = tmp\n    }\n  }\n  return (noRoot ? '' : 'm/') + ret.join('/')\n}\n\nBIPPath.prototype.inspect = function () {\n  return 'BIPPath <' + this.toString() + '>'\n}\n\nmodule.exports = BIPPath\n"],"names":["E","d","t","n","f","Promise","e","r","s","c","o","next","h","i","throw","done","value","u","then","apply","N","constructor","this","transport","decorateAppAPIMethods","getAppConfiguration","send","test_mode","version","device_locked","major","serializePath","a","Buffer","alloc","writeUInt32LE","serializeHRP","length","Error","writeUInt8","write","getAddress","_","fromString","toPathArray","concat","address","from","slice","toString","publicKey","foreach","push","resolve","sign","A","signature","return_code","super","Object","setPrototypeOf","prototype","name","I","cause","stack","x","C","S","Unknown","LocationServicesDisabled","LocationServicesUnauthorized","BluetoothScanStartFailed","R","message","id","ACCESS_CONDITION_NOT_FULFILLED","ALGORITHM_NOT_SUPPORTED","CLA_NOT_SUPPORTED","CODE_BLOCKED","CODE_NOT_INITIALIZED","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","CONDITIONS_OF_USE_NOT_SATISFIED","CONTRADICTION_INVALIDATION","CONTRADICTION_SECRET_CODE_STATUS","CUSTOM_IMAGE_BOOTLOADER","CUSTOM_IMAGE_EMPTY","FILE_ALREADY_EXISTS","FILE_NOT_FOUND","GP_AUTH_FAILED","HALTED","INCONSISTENT_FILE","INCORRECT_DATA","INCORRECT_LENGTH","INCORRECT_P1_P2","INS_NOT_SUPPORTED","DEVICE_NOT_ONBOARDED","DEVICE_NOT_ONBOARDED_2","INVALID_KCV","INVALID_OFFSET","LICENSING","LOCKED_DEVICE","MAX_VALUE_REACHED","MEMORY_PROBLEM","MISSING_CRITICAL_PARAMETER","NO_EF_SELECTED","NOT_ENOUGH_MEMORY_SPACE","OK","PIN_REMAINING_ATTEMPTS","REFERENCED_DATA_NOT_FOUND","SECURITY_STATUS_NOT_SATISFIED","TECHNICAL_PROBLEM","UNKNOWN_APDU","USER_REFUSED_ON_DEVICE","NOT_ENOUGH_SPACE","canBeMappedToChildError","keys","find","T","D","statusCode","statusText","O","Array","isArray","path","validatePathArray","fromPathArray","validateString","test","split","exec","parseInt","join","inspect","l"],"sourceRoot":""}