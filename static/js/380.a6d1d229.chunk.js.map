{"version":3,"file":"static/js/380.a6d1d229.chunk.js","mappings":"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","sources":["../node_modules/@swapkit/wallet-okx/node_modules/@swapkit/toolbox-utxo/dist/index.js"],"sourcesContent":["import{networks as wB,Psbt as lB,Transaction as YB} from\"bitcoinjs-lib\";import{Chain as W,RequestClient as i} from\"@swapkit/helpers\";var o=(_)=>`https://api.blockchair.com/${Y_(_)}`,k_=(_)=>{switch(_){case W.Bitcoin:return 5;case W.Dogecoin:return 1e4;case W.Litecoin:return 1;default:return 2}},Y_=(_)=>{switch(_){case W.BitcoinCash:return\"bitcoin-cash\";case W.Litecoin:return\"litecoin\";case W.Dash:return\"dash\";case W.Dogecoin:return\"dogecoin\";case W.Polkadot:return\"polkadot\";default:return\"bitcoin\"}},m_=async(_)=>{try{const{feePerKb:g}=await i.get(`https://app.bitgo.com/api/v2/${_.toLowerCase()}/tx/fee`),B=g/1000;return Math.max(B,k_(_))}catch(g){return k_(_)}},x=async(_,g)=>{try{const B=await i.get(_);if(!B||B.context.code!==200)throw new Error(`failed to query ${_}`);return B.data}catch(B){if(!g)throw B;const b=await i.get(`${_}${g?`&key=${g}`:\"\"}`);if(!b||b.context.code!==200)throw new Error(`failed to query ${_}`);return b.data}},I_={utxo:[],address:{balance:0,transaction_count:0}},D_=async({address:_,chain:g,apiKey:B})=>{if(!_)throw new Error(\"address is required\");try{return(await x(`${o(g)}/dashboards/address/${_}?transaction_details=true`,B))[_]}catch(b){return I_}},F_=async({address:_,chain:g,apiKey:B})=>{return(await D_({address:_,chain:g,apiKey:B}))?.address.balance},f_=async({chain:_,address:g,apiKey:B})=>{if(!g)throw new Error(\"address is required\");try{return(await x(`${o(_)}/addresses/balances?addresses=${g}`,B))[g]||0}catch(b){return 0}},G_=async({chain:_,apiKey:g,txHash:B})=>{if(!B)throw new Error(\"txHash is required\");try{return(await x(`${o(_)}/raw/transaction/${B}`,g))?.[B]?.raw_transaction}catch(b){return console.error(b),\"\"}},v_=async({chain:_,address:g,apiKey:B,offset:b=0})=>{if(!g)throw new Error(\"address is required\");try{const n=await x(`${o(_)}/outputs?q=is_spent(false),recipient(${g})&limit=100&offset=${b}`,B),k=n.filter(({is_spent:D})=>!D).map(({script_hex:D,block_id:r,transaction_hash:v,index:U,value:Q,spending_signature_hex:G})=>({hash:v,index:U,value:Q,txHex:G,script_hex:D,is_confirmed:r!==-1}));if(n.length!==100)return k;const X=await v_({address:g,chain:_,apiKey:B,offset:n?.[99]?.transaction_id});return k.concat(X)}catch(n){return console.error(n),[]}},O_=async({address:_,chain:g,apiKey:B,fetchTxHex:b=!0})=>{const n=await v_({chain:g,address:_,apiKey:B}),k=[];for(let{hash:X,index:D,script_hex:r,value:v}of n){let U;if(b)U=await G_({txHash:X,chain:g,apiKey:B});k.push({address:_,hash:X,index:D,txHex:U,value:v,witnessUtxo:{value:v,script:Buffer.from(r,\"hex\")}})}return k},A=({apiKey:_,chain:g})=>({getConfirmedBalance:(B)=>f_({chain:g,address:B,apiKey:_}),getRawTx:(B)=>G_({txHash:B,chain:g,apiKey:_}),getSuggestedTxFee:()=>m_(g),getBalance:(B)=>F_({address:B,chain:g,apiKey:_}),getAddressData:(B)=>D_({address:B,chain:g,apiKey:_}),scanUTXOs:(B)=>O_({...B,chain:g,apiKey:_})});import{Chain as j,ChainToRPC as Wg} from\"@swapkit/helpers\";import{RequestClient as V_} from\"@swapkit/helpers\";import{Chain as Y,FeeOption as t} from\"@swapkit/helpers\";import{networks as o_} from\"bitcoinjs-lib\";import m from\"coininfo\";var x_=typeof process!==\"undefined\"&&process.pid?process.pid.toString(36):\"\",L=(_)=>{switch(_){case Y.Bitcoin:return o_.bitcoin;case Y.BitcoinCash:return m.bitcoincash.main.toBitcoinJS();case Y.Dash:return m.dash.main.toBitcoinJS();case Y.Litecoin:return m.litecoin.main.toBitcoinJS();case Y.Dogecoin:{const g={private:70615956,public:70617039},B=m.dogecoin.test;return B.versions.bip32=g,m.dogecoin.main.toBitcoinJS()}default:throw new Error(\"Invalid chain\")}},U_=(_)=>({[t.Average]:_,[t.Fast]:_*1.5,[t.Fastest]:_*2}),d=0,A_=()=>{const _=Date.now(),g=d||_;return d=g,_>d?_:g+1},$_=()=>x_+A_().toString(36);var V=async({txHash:_,rpcUrl:g})=>{const B=JSON.stringify({jsonrpc:\"2.0\",method:\"sendrawtransaction\",params:[_],id:$_()}),b=await V_.post(g,{headers:{\"Content-Type\":\"application/json\"},body:B});if(b.error)throw new Error(`failed to broadcast a transaction: ${b.error?.message}`);if(b.result.includes('\"code\":-26'))throw new Error(\"Invalid transaction: the transaction amount was too low\");return b.result};import*as bg from\"@bitcoinerlab/secp256k1\";import{HDNode as ng,Transaction as Xg,TransactionBuilder as kg,address as Dg} from\"@psf/bitcoincashjs-lib\";import{mnemonicToSeedSync as Gg} from\"@scure/bip39\";import{Chain as vg,DerivationPath as Ug,FeeOption as $g,RPCUrl as Jg} from\"@swapkit/helpers\";import{Psbt as rg} from\"bitcoinjs-lib\";import{ECPairFactory as Qg} from\"ecpair\";import r_ from\"bs58check\";import Q_ from\"cashaddrjs\";var q_=function(_){try{return C(_),!0}catch(g){return!1}},L_=function(_){return C(_)?.network},I=function(_){const g=C(_);if(g?.format===\"legacy\")return _;return P_(g)},N=function(_){const g=C(_);return K_(g)},C=function(_){try{return N_(_)}catch(g){}try{return C_(_)}catch(g){}throw Error(\"Received an invalid Bitcoin Cash address as input.\")},N_=function(_){try{const g=r_.decode(_);if(g.length!==21)throw Error(\"Received an invalid Bitcoin Cash address as input.\");const B=g[0],b=Array.prototype.slice.call(g,1);switch(B){case J.legacy.mainnet.p2pkh:return{hash:b,format:\"legacy\",network:\"mainnet\",type:\"p2pkh\"};case J.legacy.mainnet.p2sh:return{hash:b,format:\"legacy\",network:\"mainnet\",type:\"p2sh\"};case J.legacy.testnet.p2pkh:return{hash:b,format:\"legacy\",network:\"testnet\",type:\"p2pkh\"};case J.legacy.testnet.p2sh:return{hash:b,format:\"legacy\",network:\"testnet\",type:\"p2sh\"};case J.bitpay.mainnet.p2pkh:return{hash:b,format:\"bitpay\",network:\"mainnet\",type:\"p2pkh\"};case J.bitpay.mainnet.p2sh:return{hash:b,format:\"bitpay\",network:\"mainnet\",type:\"p2sh\"};default:throw Error(\"Received an invalid Bitcoin Cash address as input.\")}}catch(g){throw Error(\"Received an invalid Bitcoin Cash address as input.\")}},C_=function(_){if(_.indexOf(\":\")!==-1)try{return J_(_)}catch(g){}else{const g=[\"bitcoincash\",\"bchtest\",\"bchreg\"];for(let B of g)try{return J_(`${B}:${_}`)}catch(b){}}throw Error(\"Received an invalid Bitcoin Cash address as input.\")},J_=function(_){try{const{hash:g,prefix:B,type:b}=Q_.decode(_);return{format:\"cashaddr\",hash:Array.prototype.slice.call(g,0),network:B===\"bitcoincash\"?\"mainnet\":\"testnet\",type:b===\"P2PKH\"?\"p2pkh\":\"p2sh\"}}catch(g){throw Error(\"Received an invalid Bitcoin Cash address as input.\")}},P_=function(_){const g=J.legacy[_.network][_.type],B=Buffer.alloc(1+_.hash.length);return B[0]=g,B.set(_.hash,1),r_.encode(B)},K_=function(_){const g=_.network===\"mainnet\"?\"bitcoincash\":\"bchtest\",B=_.type===\"p2pkh\"?\"P2PKH\":\"P2SH\",b=new Uint8Array(_.hash);return Q_.encode(g,B,b)};var Z_;((B)=>{B.Mainnet=\"mainnet\";B.Testnet=\"testnet\"})(Z_||={});var J={[\"legacy\"]:{[\"mainnet\"]:{[\"p2pkh\"]:0,[\"p2sh\"]:5},[\"testnet\"]:{[\"p2pkh\"]:111,[\"p2sh\"]:196}},[\"bitpay\"]:{[\"mainnet\"]:{[\"p2pkh\"]:28,[\"p2sh\"]:40},[\"testnet\"]:{[\"p2pkh\"]:111,[\"p2sh\"]:196}}};import{Chain as w} from\"@swapkit/helpers\";var s=(_)=>{switch(_){case w.Bitcoin:case w.BitcoinCash:return 550;case w.Dash:case w.Litecoin:return 5500;case w.Dogecoin:return 1e5;default:throw new Error(\"Invalid Chain\")}},z=({inputs:_,outputs:g,feeRate:B=1,chain:b=w.Bitcoin})=>{const n=Math.ceil(B),k=_[0]&&\"address\"in _[0]&&_[0].address?K(_[0].address):\"P2PKH\",X=_.filter((G)=>T(G)*n<=G.value),D=a+g.reduce((G,$)=>G+P($,k),0),r=g.reduce((G,$)=>G+$.value,0);let v=D*n,U=0;const Q=[];for(let G of X){const $=T(G),Z=n*$;v+=Z,U+=G.value,Q.push(G);const q=v+r;if(U<q)continue;const H=U-q,b_=n*P({address:\"\",value:0},k);if(H>b_){const n_=b_+v,X_=U-(r+n_);if(X_>Math.max(T({})*n,s(b)))return{inputs:Q,outputs:g.concat({value:X_,address:\"\"}),fee:n_}}return{inputs:Q,outputs:g,fee:v}}return{fee:n*F({inputs:_,outputs:g,feeRate:n})}};import{opcodes as S_,script as E_} from\"bitcoinjs-lib\";var Sg=1000,a=10,R_=10,c_=41,u_=107,y=(_)=>{const g=Buffer.from(_,\"utf8\");return E_.compile([S_.OP_RETURN,g])},e;((B)=>{B.P2PKH=\"P2PKH\";B.P2WPKH=\"P2WPKH\"})(e||={});var __={[\"P2PKH\"]:148,[\"P2WPKH\"]:68},S={[\"P2PKH\"]:34,[\"P2WPKH\"]:31},K=(_)=>{if(_.startsWith(\"bc1\")||_.startsWith(\"ltc1\"))return\"P2WPKH\";if(_.startsWith(\"1\")||_.startsWith(\"3\")||_.startsWith(\"L\")||_.startsWith(\"M\")||_.startsWith(\"X\")||_.startsWith(\"D\")||_.startsWith(\"bitcoincash:q\")||_.startsWith(\"q\"))return\"P2PKH\";throw new Error(\"Invalid address\")},F=({inputs:_,outputs:g,feeRate:B})=>{const b=_[0]&&\"address\"in _[0]&&_[0].address?K(_[0].address):\"P2PKH\",n=_.filter((X)=>X.value>=__[\"type\"in X?X.type:\"P2PKH\"]*Math.ceil(B)).reduce((X,D)=>X+T(D),0),k=g?.reduce((X,D)=>X+P(D),0)||S[b];return a+n+k},T=(_)=>{if(\"type\"in _)return __[_.type];if(\"address\"in _&&_.address)return __[K(_.address)];return c_+u_},P=(_,g)=>{if(_?.script)return R_+_.script.length+(_.script.length>=74?2:1);if(g)return S[g];return S.P2PKH};import*as g_ from\"@bitcoinerlab/secp256k1\";import{HDKey as h_} from\"@scure/bip32\";import{mnemonicToSeedSync as p_} from\"@scure/bip39\";import{AssetValue as E,BaseDecimal as i_,Chain as R,FeeOption as B_,SwapKitNumber as t_} from\"@swapkit/helpers\";import{Psbt as d_,address as s_,initEccLib as T_,payments as j_} from\"bitcoinjs-lib\";import{ECPairFactory as a_} from\"ecpair\";var c=[R.Dash,R.Dogecoin],W_=({phrase:_,wif:g,derivationPath:B,chain:b})=>{if(!(g||_))throw new Error(\"Either phrase or wif must be provided\");const n=a_(g_),k=L(b);if(g)return n.fromWIF(g,k);const X=p_(_),D=h_.fromMasterSeed(X,k).derive(B);if(!D.privateKey)throw new Error(\"Could not get private key from phrase\");return n.fromPrivateKey(Buffer.from(D.privateKey),{network:k})},z_=({address:_,chain:g})=>{try{return T_(g_),s_.toOutputScript(_,L(g)),!0}catch(B){return!1}},e_=({keys:_,chain:g})=>{if(!_)throw new Error(\"Keys must be provided\");const B=c.includes(g)?j_.p2pkh:j_.p2wpkh,{address:b}=B({pubkey:_.publicKey,network:L(g)});if(!b)throw new Error(\"Address not defined\");return b},_g=async({signTransaction:_,from:g,memo:B,recipient:b,chain:n,apiClient:k,feeOptionKey:X,broadcastTx:D,feeRate:r,assetValue:v})=>{if(!g)throw new Error(\"From address must be provided\");if(!b)throw new Error(\"Recipient address must be provided\");const U=r||(await u(k))[X||B_.Fast],{psbt:Q}=await H_({recipient:b,feeRate:U,sender:g,fetchTxHex:c.includes(n),chain:n,apiClient:k,assetValue:v,memo:B}),G=await _(Q);return G.finalizeAllInputs(),D(G.extractTransaction().toHex())},gg=async({address:_,chain:g,apiClient:B})=>{const n=(await B.getBalance(_)||0)/10**i_[g];return[await E.from({asset:`${g}.${g}`,value:n})]},u=async(_)=>U_(await _.getSuggestedTxFee()),y_=async({assetValue:_,recipient:g,memo:B,sender:b,fetchTxHex:n=!1,apiClient:k})=>{return{inputs:await k.scanUTXOs({address:b,fetchTxHex:n}),outputs:[{address:g,value:Number(_.bigIntValue)},...B?[{address:\"\",script:y(B),value:0}]:[]]}},H_=async({assetValue:_,recipient:g,memo:B,feeRate:b,sender:n,fetchTxHex:k=!1,apiClient:X,chain:D})=>{const r=B?y(B):null,v=await y_({assetValue:_,recipient:g,memo:B,sender:n,fetchTxHex:k,apiClient:X}),{inputs:U,outputs:Q}=z({...v,feeRate:b,chain:D});if(!(U&&Q))throw new Error(\"Insufficient Balance for transaction\");const G=new d_({network:L(D)});if(D===R.Dogecoin)G.setMaximumFeeRate(650000000);for(let $ of U)G.addInput({hash:$.hash,index:$.index,...!!$.witnessUtxo&&!c.includes(D)&&{witnessUtxo:$.witnessUtxo},...c.includes(D)&&{nonWitnessUtxo:$.txHex?Buffer.from($.txHex,\"hex\"):void 0}});for(let $ of Q){const Z=\"address\"in $&&$.address?$.address:n,q=$.script?r?{script:r,value:0}:void 0:{address:Z,value:$.value};if(q)T_(g_),G.addOutput(q)}return{psbt:G,utxos:v.inputs,inputs:U}},M_=async({assetValue:_,apiClient:g,chain:B,feeOptionKey:b=B_.Fast,feeRate:n,fetchTxHex:k=!1,memo:X,recipient:D,from:r})=>{const v=await y_({assetValue:_,recipient:D,memo:X,sender:r,fetchTxHex:k,apiClient:g}),U=n?Math.floor(n):(await u(g))[b];return z({...v,feeRate:U,chain:B})},Bg=async({from:_,memo:g,feeRate:B,feeOptionKey:b=B_.Fast,recipients:n=1,chain:k,apiClient:X})=>{const D=await X.getAddressData(_),r=B?Math.ceil(B):(await u(X))[b],v=D?.utxo.map((Z)=>({...Z,type:\"P2PKH\",hash:\"\"})).filter((Z)=>Z.value>Math.max(s(k),T(Z)*r));if(!v?.length)return E.from({chain:k});const U=E.from({chain:k,value:v.reduce((Z,q)=>Z+q.value,0)}),Q=typeof n===\"number\"?Array.from({length:n},()=>({address:_,value:0})):n;if(g){const Z=y(g);Q.push({address:_,script:Z,value:0})}const $=F({inputs:v,outputs:Q,feeRate:r})*r;return U.sub($)},h=(_)=>({accumulative:z,apiClient:_.apiClient,broadcastTx:_.broadcastTx,calculateTxSize:F,buildTx:(g)=>H_({...g,..._}),getAddressFromKeys:(g)=>e_({keys:g,..._}),validateAddress:(g)=>z_({address:g,..._}),createKeysForPath:(g)=>W_({...g,..._}),getPrivateKeyFromMnemonic:async(g)=>W_({..._,...g}).toWIF(),getBalance:async(g,B)=>gg({address:g,..._}),getFeeRates:()=>u(_.apiClient),transfer:(g)=>_g({...g,..._}),getInputsOutputsFee:(g)=>M_({...g,..._}),estimateTransactionFee:async(g)=>{return E.from({chain:_.chain,value:new t_({value:(await M_({...g,..._})).fee,decimal:8}).getValue(\"string\")})},estimateMaxSendableAmount:async(g)=>Bg({...g,..._})}),_B=({chain:_,address:g})=>_===R.BitcoinCash?l(g):z_({address:g,chain:_});var M=vg.BitcoinCash,O=(_)=>f(N(_)),w_=async({assetValue:_,recipient:g,memo:B,feeRate:b,sender:n,apiClient:k})=>{if(!l(g))throw new Error(\"Invalid address\");const X=await k.scanUTXOs({address:O(n),fetchTxHex:!0}),D=B?y(B):null,r=[];r.push({address:g,value:_.getBaseValue(\"number\")});const{inputs:v,outputs:U}=z({inputs:X,outputs:r,feeRate:b,chain:M});if(!(v&&U))throw new Error(\"Balance insufficient for transaction\");const Q=new kg(L(M));await Promise.all(v.map(async(G)=>{const $=await k.getRawTx(G.hash);Q.addInput(Xg.fromBuffer(Buffer.from($,\"hex\")),G.index)}));for(let G of U){const $=\"address\"in G&&G.address?G.address:I(n),Z=Dg.toOutputScript(I($),L(M));Q.addOutput(Z,G.value)}if(D)Q.addOutput(D,0);return{builder:Q,utxos:v}},Zg=async({signTransaction:_,from:g,recipient:B,assetValue:b,apiClient:n,broadcastTx:k,getFeeRates:X,...D})=>{if(!g)throw new Error(\"From address must be provided\");if(!B)throw new Error(\"Recipient address must be provided\");if(!_)throw new Error(\"signTransaction must be provided\");const r=D.feeRate||(await X())[$g.Fast],{builder:v,utxos:U}=await w_({...D,assetValue:b,feeRate:r,recipient:B,sender:g,apiClient:n}),G=_({builder:v,utxos:U}).toHex();return k(G)},qg=async({assetValue:_,recipient:g,memo:B,feeRate:b,sender:n,apiClient:k})=>{const X=N(g);if(!l(X))throw new Error(\"Invalid address\");const D=await k.scanUTXOs({address:O(n),fetchTxHex:!0}),r=Number(b.toFixed(0)),v=B?y(B):null,U=[];if(U.push({address:I(g),value:_.getBaseValue(\"number\")}),v)U.push({script:v,value:0});const{inputs:Q,outputs:G}=z({inputs:D,outputs:U,feeRate:r,chain:M});if(!(Q&&G))throw new Error(\"Balance insufficient for transaction\");const $=new rg({network:L(M)});for(let{hash:Z,index:q,witnessUtxo:H}of Q)$.addInput({hash:Z,index:q,witnessUtxo:H});for(let Z of G){const q=\"address\"in Z&&Z.address?Z.address:I(n),H=Z.script?v?{script:v,value:0}:void 0:{address:q,value:Z.value};if(H)$.addOutput(H)}return{psbt:$,utxos:D,inputs:Q}},f=(_)=>_.replace(/(bchtest:|bitcoincash:)/,\"\"),l=(_)=>{const g=f(_);return q_(g)&&L_(g)===\"mainnet\"},Lg=({phrase:_,derivationPath:g=`${Ug.BCH}/0`,wif:B})=>{const b=L(M);if(B)return Qg(bg).fromWIF(B,b);if(!_)throw new Error(\"No phrase provided\");return ng.fromSeedBuffer(Buffer.from(Gg(_)),b).derivePath(g).keyPair},jg=(_)=>{const g=_.getAddress(0);return O(g)},l_=({apiKey:_,rpcUrl:g=Jg.BitcoinCash,apiClient:B})=>{const b=B||A({apiKey:_,chain:M}),{getBalance:n,...k}=h({chain:M,apiClient:b,broadcastTx:(X)=>V({txHash:X,rpcUrl:g})});return{...k,stripPrefix:f,stripToCashAddress:O,validateAddress:l,createKeysForPath:Lg,getAddressFromKeys:jg,buildBCHTx:(X)=>w_({...X,apiClient:b}),getBalance:(X,D)=>n(f(N(X))),buildTx:(X)=>qg({...X,apiClient:b}),transfer:(X)=>Zg({...X,getFeeRates:k.getFeeRates,broadcastTx:k.broadcastTx,apiClient:b})}};var p=(_)=>({apiKey:g,rpcUrl:B=Wg[_],apiClient:b})=>{return h({chain:_,broadcastTx:(n)=>V({txHash:n,rpcUrl:B}),apiClient:b||A({apiKey:g,chain:_})})},Mg=l_,Tg=p(j.Bitcoin),zg=p(j.Dash),yg=p(j.Dogecoin),Hg=p(j.Litecoin),jB=(_)=>{switch(_){case j.BitcoinCash:return Mg;case j.Bitcoin:return Tg;case j.Dogecoin:return yg;case j.Litecoin:return Hg;case j.Dash:return zg;default:throw new Error(`Chain ${_} is not supported`)}};export{l as validateAddress,_B as utxoValidateAddress,$_ as uniqid,I as toLegacyAddress,N as toCashAddress,O as stripToCashAddress,f as stripPrefix,U_ as standardFeeRates,c as nonSegwitChains,wB as networks,q_ as isValidAddress,jB as getToolboxByChain,K as getScriptTypeForAddress,P as getOutputSize,L as getNetwork,T as getInputSize,s as getDustThreshold,Bg as estimateMaxSendableAmount,L_ as detectAddressNetwork,y as compileMemo,F as calculateTxSize,A as blockchairApi,z as accumulative,e as UTXOScriptType,YB as Transaction,a as TX_OVERHEAD,lB as Psbt,S as OutputSizes,R_ as OP_RETURN_OVERHEAD,Z_ as Network,Sg as MIN_TX_FEE,Hg as LTCToolbox,__ as InputSizes,yg as DOGEToolbox,zg as DASHToolbox,h as BaseUTXOToolbox,Tg as BTCToolbox,Mg as BCHToolbox};\n\n//# debugId=83A92581B2A4499864756E2164756E21\n"],"names":["Z_","B","o","_","Y_","k_","W","Bitcoin","Dogecoin","Litecoin","BitcoinCash","Dash","Polkadot","x","async","g","i","get","context","code","Error","data","b","I_","utxo","address","balance","transaction_count","D_","chain","apiKey","G_","txHash","raw_transaction","console","error","v_","offset","n","k","filter","is_spent","D","map","script_hex","block_id","r","transaction_hash","v","index","U","value","Q","spending_signature_hex","G","hash","txHex","is_confirmed","length","X","transaction_id","concat","A","getConfirmedBalance","f_","getRawTx","getSuggestedTxFee","feePerKb","toLowerCase","Math","max","m_","getBalance","F_","getAddressData","scanUTXOs","fetchTxHex","push","witnessUtxo","script","Buffer","from","O_","x_","process","pid","toString","L","Y","o_","bitcoin","m","main","toBitcoinJS","private","public","test","versions","bip32","d","$_","A_","Date","now","V","rpcUrl","JSON","stringify","jsonrpc","method","params","id","V_","post","headers","body","message","result","includes","Mainnet","Testnet","e","s","w","z","inputs","outputs","feeRate","ceil","K","T","a","reduce","$","P","q","H","b_","n_","X_","fee","F","y","E_","compile","S_","OP_RETURN","P2PKH","P2WPKH","__","S","startsWith","type","c_","c","R","W_","phrase","wif","derivationPath","a_","g_","fromWIF","p_","h_","fromMasterSeed","derive","privateKey","fromPrivateKey","network","z_","T_","s_","toOutputScript","u","t","Average","Fast","Fastest","U_","y_","assetValue","recipient","memo","sender","apiClient","Number","bigIntValue","H_","d_","setMaximumFeeRate","addInput","nonWitnessUtxo","Z","addOutput","psbt","utxos","M_","feeOptionKey","B_","floor","h","accumulative","broadcastTx","calculateTxSize","buildTx","getAddressFromKeys","e_","keys","j_","p2pkh","p2wpkh","pubkey","publicKey","validateAddress","createKeysForPath","getPrivateKeyFromMnemonic","toWIF","i_","E","asset","gg","getFeeRates","transfer","signTransaction","finalizeAllInputs","extractTransaction","toHex","_g","getInputsOutputsFee","estimateTransactionFee","t_","decimal","getValue","estimateMaxSendableAmount","recipients","Array","sub","Bg","p","vg","Wg","Tg","j"],"sourceRoot":""}