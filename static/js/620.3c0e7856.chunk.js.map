{"version":3,"file":"static/js/620.3c0e7856.chunk.js","mappings":"0LAQA,MAAMA,EAAKC,GAAkB,iBAALA,GAA6B,iBAALA,GAAiBA,aAAaC,EAAAA,EAAGC,EAAI,SAACF,GAAa,IAAVG,EAACC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC3F,MAAMG,EAAIN,EAAAA,EAAEO,KAAKR,GAAK,GACtB,MAAO,CACLS,OAAQA,IAAMF,EACdG,KAAM,SAACC,GAAC,IAAEC,EAACR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGD,EAAC,OAAKD,EAAEK,EAAEM,IAAId,EAAEY,GAAKA,EAAIA,EAAEF,UAAWG,EAAE,EACtDE,MAAO,SAACH,GAAC,IAAEC,EAACR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGD,EAAC,OAAKD,EAAEK,EAAEQ,IAAIhB,EAAEY,GAAKA,EAAIA,EAAEF,UAAWG,EAAE,EACvDI,MAAO,SAACL,GAAC,IAAEC,EAACR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGD,EAAC,OAAKD,EAAEK,EAAEU,IAAIlB,EAAEY,GAAKA,EAAIA,EAAEF,UAAWG,EAAE,EACvDM,IAAK,SAACP,GAAC,IAAEC,EAACR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGD,EAAC,OAAKD,EAAEK,EAAEW,IAAInB,EAAEY,GAAKA,EAAIA,EAAEF,UAAWG,EAAE,EACrDO,GAAKR,GAAMJ,EAAEY,GAAGpB,EAAEY,GAAKA,EAAIA,EAAEF,UAC7BW,IAAMT,GAAMJ,EAAEa,IAAIrB,EAAEY,GAAKA,EAAIA,EAAEF,UAC/BY,GAAKV,GAAMJ,EAAEc,GAAGtB,EAAEY,GAAKA,EAAIA,EAAEF,UAC7Ba,IAAMX,GAAMJ,EAAEe,IAAIvB,EAAEY,GAAKA,EAAIA,EAAEF,UAC/Bc,GAAKZ,GAAMJ,EAAEgB,GAAGxB,EAAEY,GAAKA,EAAIA,EAAEF,UAC7Be,QAASrB,EAEb,EACAsB,EAAAA,EAAEC,QAAcD,EAAAA,EAAEE,KAAWF,EAAAA,EAAEG,O","sources":["../node_modules/@thorswap-lib/swapkit-sdk/dist/index-543da7a9-600c9f46.js"],"sourcesContent":["import { B as e, G as i } from \"./index-68573ede.js\";\nimport \"crypto\";\nimport \"fs\";\nimport \"path\";\nimport \"buffer\";\nimport \"events\";\nimport \"util\";\nimport \"string_decoder\";\nconst a = (n) => typeof n == \"string\" || typeof n == \"number\" || n instanceof e, r = (n, u = 8) => {\n  const m = e.from(n || 0);\n  return {\n    amount: () => m,\n    plus: (o, t = u) => r(m.add(a(o) ? o : o.amount()), t),\n    minus: (o, t = u) => r(m.sub(a(o) ? o : o.amount()), t),\n    times: (o, t = u) => r(m.mul(a(o) ? o : o.amount()), t),\n    div: (o, t = u) => r(m.div(a(o) ? o : o.amount()), t),\n    lt: (o) => m.lt(a(o) ? o : o.amount()),\n    lte: (o) => m.lte(a(o) ? o : o.amount()),\n    gt: (o) => m.gt(a(o) ? o : o.amount()),\n    gte: (o) => m.gte(a(o) ? o : o.amount()),\n    eq: (o) => m.eq(a(o) ? o : o.amount()),\n    decimal: u\n  };\n};\ni.Average + \"\", i.Fast + \"\", i.Fastest + \"\";\nexport {\n  r as baseAmount\n};\n"],"names":["a","n","e","r","u","arguments","length","undefined","m","from","amount","plus","o","t","add","minus","sub","times","mul","div","lt","lte","gt","gte","eq","decimal","i","Average","Fast","Fastest"],"sourceRoot":""}