{"version":3,"file":"static/js/819.5c174574.chunk.js","mappings":"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","sources":["../node_modules/@swapkit/wallet-trezor/dist/chunk-q3ew8esa.js"],"sourcesContent":["import{a as Q,b as R}from\"./chunk-tvrdndbw.js\";import{ChainToChainId as E,SwapKitError as B,SwapKitNumber as G,WalletOption as F,derivationPathToString as $}from\"@swapkit/helpers\";import{Signature as T}from\"@swapkit/toolbox-evm\";async function v({chain:W,derivationPath:N,provider:k}){let{AbstractSigner:f}=await import(\"@swapkit/toolbox-evm\");class Y extends f{address;chain;derivationPath;provider;constructor({chain:j,derivationPath:q,provider:D}){super(D);this.address=\"\",this.chain=j,this.derivationPath=q,this.provider=D}getAddress=async()=>{if(!this.address){let{default:j}=await import(\"@trezor/connect-web\"),q=await j.ethereumGetAddress({path:$(this.derivationPath),showOnTrezor:!0});if(!q.success)throw new B({errorKey:\"wallet_trezor_failed_to_get_address\",info:{...q,chain:this.chain,derivationPath:this.derivationPath}});this.address=q.payload.address}return this.address};signMessage=async(j)=>{let{default:q}=await import(\"@trezor/connect-web\"),D=await q.ethereumSignMessage({path:$(this.derivationPath),message:j});if(!D.success)throw new B({errorKey:\"wallet_trezor_failed_to_sign_transaction\",info:{...D,message:j,chain:this.chain,derivationPath:this.derivationPath}});return D.payload.signature};signTypedData(){throw new Error(\"Not implemented\")}signTransaction=async({to:j,gasLimit:q,value:D,data:_,nonce:H,maxFeePerGas:U,maxPriorityFeePerGas:V,gasPrice:X})=>{if(!j)throw new B({errorKey:\"wallet_missing_params\",info:{to:j}});if(!q)throw new B({errorKey:\"wallet_missing_params\",info:{gasLimit:q}});let M=U&&V;if(M&&!U)throw new B({errorKey:\"wallet_missing_params\",info:{maxFeePerGas:U}});if(M&&!V)throw new B({errorKey:\"wallet_missing_params\",info:{maxPriorityFeePerGas:V}});if(!(M||X))throw new B({errorKey:\"wallet_missing_params\",info:{gasPrice:X}});let{default:I}=await import(\"@trezor/connect-web\"),{Transaction:L,toHexString:J}=await import(\"@swapkit/toolbox-evm\"),C=M?{maxFeePerGas:J(BigInt(U?.toString()||0)),maxPriorityFeePerGas:J(BigInt(V?.toString()||0))}:X&&{gasPrice:J(BigInt(X?.toString()||0))}||{gasPrice:\"0x0\"},b=J(BigInt(H||await this.provider.getTransactionCount(await this.getAddress(),\"pending\"))),Z={chainId:Number.parseInt(E[this.chain]),to:j.toString(),value:J(BigInt(D?.toString()||0)),gasLimit:J(BigInt(q?.toString()||0)),nonce:b,data:_?.toString()||\"0x\",...C},{success:K,payload:A}=await I.ethereumSignTransaction({path:$(this.derivationPath),transaction:Z});if(!K)throw new B({errorKey:\"wallet_trezor_failed_to_sign_transaction\",info:{...A,chain:this.chain,derivationPath:this.derivationPath}});let{r:u,s:z,v:y}=A,h=T.from({r:u,s:z,v:new G(BigInt(y)).getBaseValue(\"number\")}),O=L.from({...Z,nonce:Number.parseInt(Z.nonce,16),type:M?2:0,signature:h}).serialized;if(!O)throw new B({errorKey:\"wallet_trezor_failed_to_sign_transaction\",info:{chain:this.chain,derivationPath:this.derivationPath}});return O};connect=(j)=>{if(!j)throw new B({errorKey:\"wallet_provider_not_found\",info:{wallet:F.TREZOR,chain:this.chain,derivationPath:this.derivationPath}});return new Y({chain:this.chain,derivationPath:this.derivationPath,provider:j})}}return new Y({chain:W,derivationPath:N,provider:k})}export{v as getEVMSigner};\n\n//# debugId=2B52DB7FD4376AA864756E2164756E21\n"],"names":["async","v","chain","W","derivationPath","N","provider","k","AbstractSigner","f","Y","address","constructor","j","q","D","super","this","getAddress","default","ethereumGetAddress","path","$","showOnTrezor","success","B","errorKey","info","payload","signMessage","ethereumSignMessage","message","signature","signTypedData","Error","signTransaction","to","gasLimit","value","data","_","nonce","H","maxFeePerGas","U","maxPriorityFeePerGas","V","gasPrice","X","M","I","Transaction","L","toHexString","J","C","BigInt","toString","b","getTransactionCount","Z","chainId","Number","parseInt","E","K","A","ethereumSignTransaction","transaction","r","u","s","z","y","h","T","from","G","getBaseValue","O","type","serialized","connect","wallet","F","TREZOR"],"sourceRoot":""}