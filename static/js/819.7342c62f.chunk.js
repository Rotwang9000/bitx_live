"use strict";(globalThis.webpackChunkwinbit32=globalThis.webpackChunkwinbit32||[]).push([[819],{65819:(i,t,e)=>{e.d(t,{getEVMSigner:()=>n});e(47489);var a=e(44244),r=e(33852);async function n({chain:i,derivationPath:t,provider:n}){let{AbstractSigner:s}=await Promise.resolve().then(e.bind(e,33852));class o extends s{address;chain;derivationPath;provider;constructor({chain:i,derivationPath:t,provider:e}){super(e),this.address="",this.chain=i,this.derivationPath=t,this.provider=e}getAddress=async()=>{if(!this.address){let{default:i}=await e.e(572).then(e.t.bind(e,36572,19)),t=await i.ethereumGetAddress({path:(0,a.fi)(this.derivationPath),showOnTrezor:!0});if(!t.success)throw new a.Oo({errorKey:"wallet_trezor_failed_to_get_address",info:{...t,chain:this.chain,derivationPath:this.derivationPath}});this.address=t.payload.address}return this.address};signMessage=async i=>{let{default:t}=await e.e(572).then(e.t.bind(e,36572,19)),r=await t.ethereumSignMessage({path:(0,a.fi)(this.derivationPath),message:i});if(!r.success)throw new a.Oo({errorKey:"wallet_trezor_failed_to_sign_transaction",info:{...r,message:i,chain:this.chain,derivationPath:this.derivationPath}});return r.payload.signature};signTypedData(){throw new Error("Not implemented")}signTransaction=async({to:i,gasLimit:t,value:n,data:s,nonce:o,maxFeePerGas:h,maxPriorityFeePerGas:d,gasPrice:c})=>{if(!i)throw new a.Oo({errorKey:"wallet_missing_params",info:{to:i}});if(!t)throw new a.Oo({errorKey:"wallet_missing_params",info:{gasLimit:t}});let g=h&&d;if(g&&!h)throw new a.Oo({errorKey:"wallet_missing_params",info:{maxFeePerGas:h}});if(g&&!d)throw new a.Oo({errorKey:"wallet_missing_params",info:{maxPriorityFeePerGas:d}});if(!g&&!c)throw new a.Oo({errorKey:"wallet_missing_params",info:{gasPrice:c}});let{default:l}=await e.e(572).then(e.t.bind(e,36572,19)),{Transaction:w,toHexString:f}=await Promise.resolve().then(e.bind(e,33852)),v=g?{maxFeePerGas:f(BigInt(h?.toString()||0)),maxPriorityFeePerGas:f(BigInt(d?.toString()||0))}:c&&{gasPrice:f(BigInt(c?.toString()||0))}||{gasPrice:"0x0"},P=f(BigInt(o||await this.provider.getTransactionCount(await this.getAddress(),"pending"))),m={chainId:Number.parseInt(a.l6[this.chain]),to:i.toString(),value:f(BigInt(n?.toString()||0)),gasLimit:f(BigInt(t?.toString()||0)),nonce:P,data:s?.toString()||"0x",...v},{success:_,payload:u}=await l.ethereumSignTransaction({path:(0,a.fi)(this.derivationPath),transaction:m});if(!_)throw new a.Oo({errorKey:"wallet_trezor_failed_to_sign_transaction",info:{...u,chain:this.chain,derivationPath:this.derivationPath}});let{r:p,s:y,v:b}=u,O=r.to.from({r:p,s:y,v:new a.Lm(BigInt(b)).getBaseValue("number")}),S=w.from({...m,nonce:Number.parseInt(m.nonce,16),type:g?2:0,signature:O}).serialized;if(!S)throw new a.Oo({errorKey:"wallet_trezor_failed_to_sign_transaction",info:{chain:this.chain,derivationPath:this.derivationPath}});return S};connect=i=>{if(!i)throw new a.Oo({errorKey:"wallet_provider_not_found",info:{wallet:a.$p.TREZOR,chain:this.chain,derivationPath:this.derivationPath}});return new o({chain:this.chain,derivationPath:this.derivationPath,provider:i})}}return new o({chain:i,derivationPath:t,provider:n})}}}]);
//# sourceMappingURL=819.7342c62f.chunk.js.map