{"version":3,"file":"static/js/118.0ad1ee9d.chunk.js","mappings":"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","sources":["../node_modules/@swapkit/wallet-trezor/dist/chunk-0262sff1.js"],"sourcesContent":["import{a as Q,b as R}from\"./chunk-tvrdndbw.js\";import{ChainToChainId as y,SwapKitError as B,SwapKitNumber as T,WalletOption as E,derivationPathToString as $}from\"@swapkit/helpers\";async function w({chain:O,derivationPath:W,provider:k}){let{AbstractSigner:f}=await import(\"@swapkit/toolbox-evm\");class Y extends f{address;chain;derivationPath;provider;constructor({chain:j,derivationPath:q,provider:D}){super(D);this.address=\"\",this.chain=j,this.derivationPath=q,this.provider=D}getAddress=async()=>{if(!this.address){let{default:j}=await import(\"@trezor/connect-web\"),q=await j.ethereumGetAddress({path:$(this.derivationPath),showOnTrezor:!0});if(!q.success)throw new B({errorKey:\"wallet_trezor_failed_to_get_address\",info:{...q,chain:this.chain,derivationPath:this.derivationPath}});this.address=q.payload.address}return this.address};signMessage=async(j)=>{let{default:q}=await import(\"@trezor/connect-web\"),D=await q.ethereumSignMessage({path:$(this.derivationPath),message:j});if(!D.success)throw new B({errorKey:\"wallet_trezor_failed_to_sign_transaction\",info:{...D,message:j,chain:this.chain,derivationPath:this.derivationPath}});return D.payload.signature};signTypedData(){throw new Error(\"Not implemented\")}signTransaction=async({to:j,gasLimit:q,value:D,data:H,nonce:_,maxFeePerGas:U,maxPriorityFeePerGas:V,gasPrice:X})=>{if(!j)throw new B({errorKey:\"wallet_missing_params\",info:{to:j}});if(!q)throw new B({errorKey:\"wallet_missing_params\",info:{gasLimit:q}});let J=U&&V;if(J&&!U)throw new B({errorKey:\"wallet_missing_params\",info:{maxFeePerGas:U}});if(J&&!V)throw new B({errorKey:\"wallet_missing_params\",info:{maxPriorityFeePerGas:V}});if(!(J||X))throw new B({errorKey:\"wallet_missing_params\",info:{gasPrice:X}});let{default:I}=await import(\"@trezor/connect-web\"),{Transaction:L,toHexString:M}=await import(\"@swapkit/toolbox-evm\"),C=J?{maxFeePerGas:M(BigInt(U?.toString()||0)),maxPriorityFeePerGas:M(BigInt(V?.toString()||0))}:X&&{gasPrice:M(BigInt(X?.toString()||0))}||{gasPrice:\"0x0\"},Z={chainId:Number.parseInt(y[this.chain]),to:j.toString(),frin:this.address,value:M(BigInt(D?.toString()||0)),gasLimit:M(BigInt(q?.toString()||0)),nonce:(_?.toString()||await this.provider.getTransactionCount(await this.getAddress(),\"pending\")).toString(),data:H?.toString()||\"0x\",...C},{success:b,payload:A}=await I.ethereumSignTransaction({path:$(this.derivationPath),transaction:Z});if(!b)throw new B({errorKey:\"wallet_trezor_failed_to_sign_transaction\",info:{...A,chain:this.chain,derivationPath:this.derivationPath}});let{r:u,s:z,v:K}=A,N=L.from({...Z,nonce:Number.parseInt(Z.nonce),type:J?2:0,signature:{r:u,s:z,v:new T(K).getBaseValue(\"number\")}}).serialized;if(!N)throw new B({errorKey:\"wallet_trezor_failed_to_sign_transaction\",info:{chain:this.chain,derivationPath:this.derivationPath}});return N};connect=(j)=>{if(!j)throw new B({errorKey:\"wallet_provider_not_found\",info:{wallet:E.TREZOR,chain:this.chain,derivationPath:this.derivationPath}});return new Y({chain:this.chain,derivationPath:this.derivationPath,provider:j})}}return new Y({chain:O,derivationPath:W,provider:k})}export{w as getEVMSigner};\n\n//# debugId=9112EBC32A375BFD64756E2164756E21\n"],"names":["async","w","chain","O","derivationPath","W","provider","k","AbstractSigner","f","Y","address","constructor","j","q","D","super","this","getAddress","default","ethereumGetAddress","path","$","showOnTrezor","success","B","errorKey","info","payload","signMessage","ethereumSignMessage","message","signature","signTypedData","Error","signTransaction","to","gasLimit","value","data","H","nonce","_","maxFeePerGas","U","maxPriorityFeePerGas","V","gasPrice","X","J","I","Transaction","L","toHexString","M","C","BigInt","toString","Z","chainId","Number","parseInt","y","frin","getTransactionCount","b","A","ethereumSignTransaction","transaction","r","u","s","z","v","K","N","from","type","T","getBaseValue","serialized","connect","wallet","E","TREZOR"],"sourceRoot":""}