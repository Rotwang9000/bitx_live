{"version":3,"file":"static/js/746.a6abaa59.chunk.js","mappings":"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","sources":["../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/_assert.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/utils.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/hmac.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/pbkdf2.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/_md.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/_u64.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/sha512.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@scure/bip39/esm/index.js","../node_modules/@swapkit/toolbox-solana/dist/index.js"],"sourcesContent":["function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assertHash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assertNumber(c);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Choice: a ? b : c\nexport const Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n","/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nimport { bytes as assertBytes, number as assertNumber } from '@noble/hashes/_assert';\nimport { pbkdf2, pbkdf2Async } from '@noble/hashes/pbkdf2';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { utils as baseUtils } from '@scure/base';\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\n// https://tonsky.me/blog/unicode/#why-is-a----\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    assertBytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nexport function generateMnemonic(wordlist, strength = 128) {\n    assertNumber(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic(randomBytes(strength / 8), wordlist);\n}\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([(sha256(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Wordlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return baseUtils.chain(baseUtils.checksum(1, calcChecksum), baseUtils.radix2(11, true), baseUtils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nexport function entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nexport function validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nexport function mnemonicToSeed(mnemonic, passphrase = '') {\n    return pbkdf2Async(sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nexport function mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return pbkdf2(sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\n","import{mnemonicToSeedSync as VJ}from\"@scure/bip39\";import{TOKEN_PROGRAM_ID as jJ,createAssociatedTokenAccountInstruction as zJ,createTransferCheckedInstruction as TJ,getAccount as UJ,getAssociatedTokenAddress as m0}from\"@solana/spl-token\";import{TokenListProvider as MJ}from\"@solana/spl-token-registry\";import{Connection as OJ,Keypair as WJ,PublicKey as Y8,SystemProgram as kJ,Transaction as d0,sendAndConfirmTransaction as CJ}from\"@solana/web3.js\";import{AssetValue as l0,Chain as p0,DerivationPath as SJ,RPCUrl as DJ,SwapKitError as u0,SwapKitNumber as HJ}from\"@swapkit/helpers\";function Z0($){if(!Number.isSafeInteger($)||$<0)throw new Error(`positive integer expected, not ${$}`)}function Q$($){return $ instanceof Uint8Array||$!=null&&typeof $===\"object\"&&$.constructor.name===\"Uint8Array\"}function d($,...J){if(!Q$($))throw new Error(\"Uint8Array expected\");if(J.length>0&&!J.includes($.length))throw new Error(`Uint8Array expected of length ${J}, not of length=${$.length}`)}function N0($){if(typeof $!==\"function\"||typeof $.create!==\"function\")throw new Error(\"Hash should be wrapped by utils.wrapConstructor\");Z0($.outputLen),Z0($.blockLen)}function G8($,J=!0){if($.destroyed)throw new Error(\"Hash instance has been destroyed\");if(J&&$.finished)throw new Error(\"Hash#digest() has already been called\")}function Y0($,J){d($);let Q=J.outputLen;if($.length<Q)throw new Error(`digestInto() expects output buffer of length at least ${Q}`)}var w8=typeof globalThis===\"object\"&&\"crypto\"in globalThis?globalThis.crypto:void 0;/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */var X8=($)=>new DataView($.buffer,$.byteOffset,$.byteLength),l=($,J)=>$<<32-J|$>>>J,U8=($,J)=>$<<J|$>>>32-J>>>0,bJ=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;var q$=Array.from({length:256},($,J)=>J.toString(16).padStart(2,\"0\"));function F8($){d($);let J=\"\";for(let Q=0;Q<$.length;Q++)J+=q$[$[Q]];return J}var t={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function K0($){if($>=t._0&&$<=t._9)return $-t._0;if($>=t._A&&$<=t._F)return $-(t._A-10);if($>=t._a&&$<=t._f)return $-(t._a-10);return}function G0($){if(typeof $!==\"string\")throw new Error(\"hex string expected, got \"+typeof $);let J=$.length,Q=J/2;if(J%2)throw new Error(\"padded hex string expected, got unpadded hex of length \"+J);let q=new Uint8Array(Q);for(let Z=0,X=0;Z<Q;Z++,X+=2){let K=K0($.charCodeAt(X)),G=K0($.charCodeAt(X+1));if(K===void 0||G===void 0){let Y=$[X]+$[X+1];throw new Error('hex string expected, got non-hex character \"'+Y+'\" at index '+X)}q[Z]=K*16+G}return q}function A8($){if(typeof $!==\"string\")throw new Error(`utf8ToBytes expected string, got ${typeof $}`);return new Uint8Array(new TextEncoder().encode($))}function M8($){if(typeof $===\"string\")$=A8($);return d($),$}function L8(...$){let J=0;for(let q=0;q<$.length;q++){let Z=$[q];d(Z),J+=Z.length}let Q=new Uint8Array(J);for(let q=0,Z=0;q<$.length;q++){let X=$[q];Q.set(X,Z),Z+=X.length}return Q}class O8{clone(){return this._cloneInto()}}var xJ={}.toString;function I8($){let J=(q)=>$().update(M8(q)).digest(),Q=$();return J.outputLen=Q.outputLen,J.blockLen=Q.blockLen,J.create=()=>$(),J}function I0($=32){if(w8&&typeof w8.getRandomValues===\"function\")return w8.getRandomValues(new Uint8Array($));throw new Error(\"crypto.getRandomValues must be defined\")}function X$($,J,Q,q){if(typeof $.setBigUint64===\"function\")return $.setBigUint64(J,Q,q);let Z=BigInt(32),X=BigInt(4294967295),K=Number(Q>>Z&X),G=Number(Q&X),Y=q?4:0,V=q?0:4;$.setUint32(J+Y,K,q),$.setUint32(J+V,G,q)}var V0=($,J,Q)=>$&J^~$&Q,j0=($,J,Q)=>$&J^$&Q^J&Q;class Z8 extends O8{constructor($,J,Q,q){super();this.blockLen=$,this.outputLen=J,this.padOffset=Q,this.isLE=q,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array($),this.view=X8(this.buffer)}update($){G8(this);let{view:J,buffer:Q,blockLen:q}=this;$=M8($);let Z=$.length;for(let X=0;X<Z;){let K=Math.min(q-this.pos,Z-X);if(K===q){let G=X8($);for(;q<=Z-X;X+=q)this.process(G,X);continue}if(Q.set($.subarray(X,X+K),this.pos),this.pos+=K,X+=K,this.pos===q)this.process(J,0),this.pos=0}return this.length+=$.length,this.roundClean(),this}digestInto($){G8(this),Y0($,this),this.finished=!0;let{buffer:J,view:Q,blockLen:q,isLE:Z}=this,{pos:X}=this;if(J[X++]=128,this.buffer.subarray(X).fill(0),this.padOffset>q-X)this.process(Q,0),X=0;for(let N=X;N<q;N++)J[N]=0;X$(Q,q-8,BigInt(this.length*8),Z),this.process(Q,0);let K=X8($),G=this.outputLen;if(G%4)throw new Error(\"_sha2: outputLen should be aligned to 32bit\");let Y=G/4,V=this.get();if(Y>V.length)throw new Error(\"_sha2: outputLen bigger than state\");for(let N=0;N<Y;N++)K.setUint32(4*N,V[N],Z)}digest(){let{buffer:$,outputLen:J}=this;this.digestInto($);let Q=$.slice(0,J);return this.destroy(),Q}_cloneInto($){$||($=new this.constructor),$.set(...this.get());let{blockLen:J,buffer:Q,length:q,finished:Z,destroyed:X,pos:K}=this;if($.length=q,$.pos=K,$.finished=Z,$.destroyed=X,q%J)$.buffer.set(Q);return $}}var R8=BigInt(4294967295),b8=BigInt(32);function z0($,J=!1){if(J)return{h:Number($&R8),l:Number($>>b8&R8)};return{h:Number($>>b8&R8)|0,l:Number($&R8)|0}}function Z$($,J=!1){let Q=new Uint32Array($.length),q=new Uint32Array($.length);for(let Z=0;Z<$.length;Z++){let{h:X,l:K}=z0($[Z],J);[Q[Z],q[Z]]=[X,K]}return[Q,q]}var N$=($,J)=>BigInt($>>>0)<<b8|BigInt(J>>>0),Y$=($,J,Q)=>$>>>Q,K$=($,J,Q)=>$<<32-Q|J>>>Q,G$=($,J,Q)=>$>>>Q|J<<32-Q,I$=($,J,Q)=>$<<32-Q|J>>>Q,V$=($,J,Q)=>$<<64-Q|J>>>Q-32,j$=($,J,Q)=>$>>>Q-32|J<<64-Q,z$=($,J)=>J,T$=($,J)=>$,U$=($,J,Q)=>$<<Q|J>>>32-Q,M$=($,J,Q)=>J<<Q|$>>>32-Q,O$=($,J,Q)=>J<<Q-32|$>>>64-Q,W$=($,J,Q)=>$<<Q-32|J>>>64-Q;function k$($,J,Q,q){let Z=(J>>>0)+(q>>>0);return{h:$+Q+(Z/4294967296|0)|0,l:Z|0}}var C$=($,J,Q)=>($>>>0)+(J>>>0)+(Q>>>0),S$=($,J,Q,q)=>J+Q+q+($/4294967296|0)|0,D$=($,J,Q,q)=>($>>>0)+(J>>>0)+(Q>>>0)+(q>>>0),H$=($,J,Q,q,Z)=>J+Q+q+Z+($/4294967296|0)|0,w$=($,J,Q,q,Z)=>($>>>0)+(J>>>0)+(Q>>>0)+(q>>>0)+(Z>>>0),A$=($,J,Q,q,Z,X)=>J+Q+q+Z+X+($/4294967296|0)|0;var L$={fromBig:z0,split:Z$,toBig:N$,shrSH:Y$,shrSL:K$,rotrSH:G$,rotrSL:I$,rotrBH:V$,rotrBL:j$,rotr32H:z$,rotr32L:T$,rotlSH:U$,rotlSL:M$,rotlBH:O$,rotlBL:W$,add:k$,add3L:C$,add3H:S$,add4L:D$,add4H:H$,add5H:A$,add5L:w$},M=L$;var[R$,B$]=(()=>M.split([\"0x428a2f98d728ae22\",\"0x7137449123ef65cd\",\"0xb5c0fbcfec4d3b2f\",\"0xe9b5dba58189dbbc\",\"0x3956c25bf348b538\",\"0x59f111f1b605d019\",\"0x923f82a4af194f9b\",\"0xab1c5ed5da6d8118\",\"0xd807aa98a3030242\",\"0x12835b0145706fbe\",\"0x243185be4ee4b28c\",\"0x550c7dc3d5ffb4e2\",\"0x72be5d74f27b896f\",\"0x80deb1fe3b1696b1\",\"0x9bdc06a725c71235\",\"0xc19bf174cf692694\",\"0xe49b69c19ef14ad2\",\"0xefbe4786384f25e3\",\"0x0fc19dc68b8cd5b5\",\"0x240ca1cc77ac9c65\",\"0x2de92c6f592b0275\",\"0x4a7484aa6ea6e483\",\"0x5cb0a9dcbd41fbd4\",\"0x76f988da831153b5\",\"0x983e5152ee66dfab\",\"0xa831c66d2db43210\",\"0xb00327c898fb213f\",\"0xbf597fc7beef0ee4\",\"0xc6e00bf33da88fc2\",\"0xd5a79147930aa725\",\"0x06ca6351e003826f\",\"0x142929670a0e6e70\",\"0x27b70a8546d22ffc\",\"0x2e1b21385c26c926\",\"0x4d2c6dfc5ac42aed\",\"0x53380d139d95b3df\",\"0x650a73548baf63de\",\"0x766a0abb3c77b2a8\",\"0x81c2c92e47edaee6\",\"0x92722c851482353b\",\"0xa2bfe8a14cf10364\",\"0xa81a664bbc423001\",\"0xc24b8b70d0f89791\",\"0xc76c51a30654be30\",\"0xd192e819d6ef5218\",\"0xd69906245565a910\",\"0xf40e35855771202a\",\"0x106aa07032bbd1b8\",\"0x19a4c116b8d2d0c8\",\"0x1e376c085141ab53\",\"0x2748774cdf8eeb99\",\"0x34b0bcb5e19b48a8\",\"0x391c0cb3c5c95a63\",\"0x4ed8aa4ae3418acb\",\"0x5b9cca4f7763e373\",\"0x682e6ff3d6b2b8a3\",\"0x748f82ee5defb2fc\",\"0x78a5636f43172f60\",\"0x84c87814a1f0ab72\",\"0x8cc702081a6439ec\",\"0x90befffa23631e28\",\"0xa4506cebde82bde9\",\"0xbef9a3f7b2c67915\",\"0xc67178f2e372532b\",\"0xca273eceea26619c\",\"0xd186b8c721c0c207\",\"0xeada7dd6cde0eb1e\",\"0xf57d4f7fee6ed178\",\"0x06f067aa72176fba\",\"0x0a637dc5a2c898a6\",\"0x113f9804bef90dae\",\"0x1b710b35131c471b\",\"0x28db77f523047d84\",\"0x32caab7b40c72493\",\"0x3c9ebe0a15c9bebc\",\"0x431d67c49c100d4c\",\"0x4cc5d4becb3e42b6\",\"0x597f299cfc657e2a\",\"0x5fcb6fab3ad6faec\",\"0x6c44198c4a475817\"].map(($)=>BigInt($))))(),e=new Uint32Array(80),$8=new Uint32Array(80);class T0 extends Z8{constructor(){super(128,64,16,!1);this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){let{Ah:$,Al:J,Bh:Q,Bl:q,Ch:Z,Cl:X,Dh:K,Dl:G,Eh:Y,El:V,Fh:N,Fl:T,Gh:z,Gl:S,Hh:W,Hl:A}=this;return[$,J,Q,q,Z,X,K,G,Y,V,N,T,z,S,W,A]}set($,J,Q,q,Z,X,K,G,Y,V,N,T,z,S,W,A){this.Ah=$|0,this.Al=J|0,this.Bh=Q|0,this.Bl=q|0,this.Ch=Z|0,this.Cl=X|0,this.Dh=K|0,this.Dl=G|0,this.Eh=Y|0,this.El=V|0,this.Fh=N|0,this.Fl=T|0,this.Gh=z|0,this.Gl=S|0,this.Hh=W|0,this.Hl=A|0}process($,J){for(let k=0;k<16;k++,J+=4)e[k]=$.getUint32(J),$8[k]=$.getUint32(J+=4);for(let k=16;k<80;k++){let x=e[k-15]|0,R=$8[k-15]|0,O=M.rotrSH(x,R,1)^M.rotrSH(x,R,8)^M.shrSH(x,R,7),r=M.rotrSL(x,R,1)^M.rotrSL(x,R,8)^M.shrSL(x,R,7),m=e[k-2]|0,y=$8[k-2]|0,q8=M.rotrSH(m,y,19)^M.rotrBH(m,y,61)^M.shrSH(m,y,6),K8=M.rotrSL(m,y,19)^M.rotrBL(m,y,61)^M.shrSL(m,y,6),a=M.add4L(r,K8,$8[k-7],$8[k-16]),z8=M.add4H(a,O,q8,e[k-7],e[k-16]);e[k]=z8|0,$8[k]=a|0}let{Ah:Q,Al:q,Bh:Z,Bl:X,Ch:K,Cl:G,Dh:Y,Dl:V,Eh:N,El:T,Fh:z,Fl:S,Gh:W,Gl:A,Hh:g,Hl:b}=this;for(let k=0;k<80;k++){let x=M.rotrSH(N,T,14)^M.rotrSH(N,T,18)^M.rotrBH(N,T,41),R=M.rotrSL(N,T,14)^M.rotrSL(N,T,18)^M.rotrBL(N,T,41),O=N&z^~N&W,r=T&S^~T&A,m=M.add5L(b,R,r,B$[k],$8[k]),y=M.add5H(m,g,x,O,R$[k],e[k]),q8=m|0,K8=M.rotrSH(Q,q,28)^M.rotrBH(Q,q,34)^M.rotrBH(Q,q,39),a=M.rotrSL(Q,q,28)^M.rotrBL(Q,q,34)^M.rotrBL(Q,q,39),z8=Q&Z^Q&K^Z&K,T8=q&X^q&G^X&G;g=W|0,b=A|0,W=z|0,A=S|0,z=N|0,S=T|0,{h:N,l:T}=M.add(Y|0,V|0,y|0,q8|0),Y=K|0,V=G|0,K=Z|0,G=X|0,Z=Q|0,X=q|0;let S8=M.add3L(q8,a,T8);Q=M.add3H(S8,y,K8,z8),q=S8|0}({h:Q,l:q}=M.add(this.Ah|0,this.Al|0,Q|0,q|0)),{h:Z,l:X}=M.add(this.Bh|0,this.Bl|0,Z|0,X|0),{h:K,l:G}=M.add(this.Ch|0,this.Cl|0,K|0,G|0),{h:Y,l:V}=M.add(this.Dh|0,this.Dl|0,Y|0,V|0),{h:N,l:T}=M.add(this.Eh|0,this.El|0,N|0,T|0),{h:z,l:S}=M.add(this.Fh|0,this.Fl|0,z|0,S|0),{h:W,l:A}=M.add(this.Gh|0,this.Gl|0,W|0,A|0),{h:g,l:b}=M.add(this.Hh|0,this.Hl|0,g|0,b|0),this.set(Q,q,Z,X,K,G,Y,V,N,T,z,S,W,A,g,b)}roundClean(){e.fill(0),$8.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}var W8=I8(()=>new T0);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */var g$=BigInt(1),v$=BigInt(2);function x8($){return $ instanceof Uint8Array||$!=null&&typeof $===\"object\"&&$.constructor.name===\"Uint8Array\"}function _8($){if(!x8($))throw new Error(\"Uint8Array expected\")}var E$=Array.from({length:256},($,J)=>J.toString(16).padStart(2,\"0\"));function B8($){_8($);let J=\"\";for(let Q=0;Q<$.length;Q++)J+=E$[$[Q]];return J}function M0($){if(typeof $!==\"string\")throw new Error(\"hex string expected, got \"+typeof $);return BigInt($===\"\"?\"0\":`0x${$}`)}var s={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function U0($){if($>=s._0&&$<=s._9)return $-s._0;if($>=s._A&&$<=s._F)return $-(s._A-10);if($>=s._a&&$<=s._f)return $-(s._a-10);return}function O0($){if(typeof $!==\"string\")throw new Error(\"hex string expected, got \"+typeof $);let J=$.length,Q=J/2;if(J%2)throw new Error(\"padded hex string expected, got unpadded hex of length \"+J);let q=new Uint8Array(Q);for(let Z=0,X=0;Z<Q;Z++,X+=2){let K=U0($.charCodeAt(X)),G=U0($.charCodeAt(X+1));if(K===void 0||G===void 0){let Y=$[X]+$[X+1];throw new Error('hex string expected, got non-hex character \"'+Y+'\" at index '+X)}q[Z]=K*16+G}return q}function W0($){return M0(B8($))}function V8($){return _8($),M0(B8(Uint8Array.from($).reverse()))}function y8($,J){return O0($.toString(16).padStart(J*2,\"0\"))}function k8($,J){return y8($,J).reverse()}function i($,J,Q){let q;if(typeof J===\"string\")try{q=O0(J)}catch(X){throw new Error(`${$} must be valid hex string, got \"${J}\". Cause: ${X}`)}else if(x8(J))q=Uint8Array.from(J);else throw new Error(`${$} must be hex string or Uint8Array`);let Z=q.length;if(typeof Q===\"number\"&&Z!==Q)throw new Error(`${$} expected ${Q} bytes, got ${Z}`);return q}function c8(...$){let J=0;for(let q=0;q<$.length;q++){let Z=$[q];_8(Z),J+=Z.length}let Q=new Uint8Array(J);for(let q=0,Z=0;q<$.length;q++){let X=$[q];Q.set(X,Z),Z+=X.length}return Q}var k0=($)=>(v$<<BigInt($-1))-g$;var P$={bigint:($)=>typeof $===\"bigint\",function:($)=>typeof $===\"function\",boolean:($)=>typeof $===\"boolean\",string:($)=>typeof $===\"string\",stringOrUint8Array:($)=>typeof $===\"string\"||x8($),isSafeInteger:($)=>Number.isSafeInteger($),array:($)=>Array.isArray($),field:($,J)=>J.Fp.isValid($),hash:($)=>typeof $===\"function\"&&Number.isSafeInteger($.outputLen)};function j8($,J,Q={}){let q=(Z,X,K)=>{let G=P$[X];if(typeof G!==\"function\")throw new Error(`Invalid validator \"${X}\", expected function`);let Y=$[Z];if(K&&Y===void 0)return;if(!G(Y,$))throw new Error(`Invalid param ${String(Z)}=${Y} (${typeof Y}), expected ${X}`)};for(let[Z,X]of Object.entries(J))q(Z,X,!1);for(let[Z,X]of Object.entries(Q))q(Z,X,!0);return $}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */var P=BigInt(0),v=BigInt(1),N8=BigInt(2),F$=BigInt(3),m8=BigInt(4),C0=BigInt(5),S0=BigInt(8),b$=BigInt(9),x$=BigInt(16);function E($,J){let Q=$%J;return Q>=P?Q:J+Q}function _$($,J,Q){if(Q<=P||J<P)throw new Error(\"Expected power/modulo > 0\");if(Q===v)return P;let q=v;while(J>P){if(J&v)q=q*$%Q;$=$*$%Q,J>>=v}return q}function p($,J,Q){let q=$;while(J-- >P)q*=q,q%=Q;return q}function D0($,J){if($===P||J<=P)throw new Error(`invert: expected positive integers, got n=${$} mod=${J}`);let Q=E($,J),q=J,Z=P,X=v,K=v,G=P;while(Q!==P){let V=q/Q,N=q%Q,T=Z-K*V,z=X-G*V;q=Q,Q=N,Z=K,X=G,K=T,G=z}if(q!==v)throw new Error(\"invert: does not exist\");return E(Z,J)}function y$($){let J=($-v)/N8,Q,q,Z;for(Q=$-v,q=0;Q%N8===P;Q/=N8,q++);for(Z=N8;Z<$&&_$(Z,J,$)!==$-v;Z++);if(q===1){let K=($+v)/m8;return function G(Y,V){let N=Y.pow(V,K);if(!Y.eql(Y.sqr(N),V))throw new Error(\"Cannot find square root\");return N}}let X=(Q+v)/N8;return function K(G,Y){if(G.pow(Y,J)===G.neg(G.ONE))throw new Error(\"Cannot find square root\");let V=q,N=G.pow(G.mul(G.ONE,Z),Q),T=G.pow(Y,X),z=G.pow(Y,Q);while(!G.eql(z,G.ONE)){if(G.eql(z,G.ZERO))return G.ZERO;let S=1;for(let A=G.sqr(z);S<V;S++){if(G.eql(A,G.ONE))break;A=G.sqr(A)}let W=G.pow(N,v<<BigInt(V-S-1));N=G.sqr(W),T=G.mul(T,W),z=G.mul(z,N),V=S}return T}}function c$($){if($%m8===F$){let J=($+v)/m8;return function Q(q,Z){let X=q.pow(Z,J);if(!q.eql(q.sqr(X),Z))throw new Error(\"Cannot find square root\");return X}}if($%S0===C0){let J=($-C0)/S0;return function Q(q,Z){let X=q.mul(Z,N8),K=q.pow(X,J),G=q.mul(Z,K),Y=q.mul(q.mul(G,N8),K),V=q.mul(G,q.sub(Y,q.ONE));if(!q.eql(q.sqr(V),Z))throw new Error(\"Cannot find square root\");return V}}if($%x$===b$);return y$($)}var H0=($,J)=>(E($,J)&v)===v,m$=[\"create\",\"isValid\",\"is0\",\"neg\",\"inv\",\"sqrt\",\"sqr\",\"eql\",\"add\",\"sub\",\"mul\",\"pow\",\"div\",\"addN\",\"subN\",\"mulN\",\"sqrN\"];function w0($){let J={ORDER:\"bigint\",MASK:\"bigint\",BYTES:\"isSafeInteger\",BITS:\"isSafeInteger\"},Q=m$.reduce((q,Z)=>{return q[Z]=\"function\",q},J);return j8($,Q)}function u$($,J,Q){if(Q<P)throw new Error(\"Expected power > 0\");if(Q===P)return $.ONE;if(Q===v)return J;let q=$.ONE,Z=J;while(Q>P){if(Q&v)q=$.mul(q,Z);Z=$.sqr(Z),Q>>=v}return q}function d$($,J){let Q=new Array(J.length),q=J.reduce((X,K,G)=>{if($.is0(K))return X;return Q[G]=X,$.mul(X,K)},$.ONE),Z=$.inv(q);return J.reduceRight((X,K,G)=>{if($.is0(K))return X;return Q[G]=$.mul(X,Q[G]),$.mul(X,K)},Z),Q}function u8($,J){let Q=J!==void 0?J:$.toString(2).length,q=Math.ceil(Q/8);return{nBitLength:Q,nByteLength:q}}function A0($,J,Q=!1,q={}){if($<=P)throw new Error(`Expected Field ORDER > 0, got ${$}`);let{nBitLength:Z,nByteLength:X}=u8($,J);if(X>2048)throw new Error(\"Field lengths over 2048 bytes are not supported\");let K=c$($),G=Object.freeze({ORDER:$,BITS:Z,BYTES:X,MASK:k0(Z),ZERO:P,ONE:v,create:(Y)=>E(Y,$),isValid:(Y)=>{if(typeof Y!==\"bigint\")throw new Error(`Invalid field element: expected bigint, got ${typeof Y}`);return P<=Y&&Y<$},is0:(Y)=>Y===P,isOdd:(Y)=>(Y&v)===v,neg:(Y)=>E(-Y,$),eql:(Y,V)=>Y===V,sqr:(Y)=>E(Y*Y,$),add:(Y,V)=>E(Y+V,$),sub:(Y,V)=>E(Y-V,$),mul:(Y,V)=>E(Y*V,$),pow:(Y,V)=>u$(G,Y,V),div:(Y,V)=>E(Y*D0(V,$),$),sqrN:(Y)=>Y*Y,addN:(Y,V)=>Y+V,subN:(Y,V)=>Y-V,mulN:(Y,V)=>Y*V,inv:(Y)=>D0(Y,$),sqrt:q.sqrt||((Y)=>K(G,Y)),invertBatch:(Y)=>d$(G,Y),cmov:(Y,V,N)=>N?V:Y,toBytes:(Y)=>Q?k8(Y,X):y8(Y,X),fromBytes:(Y)=>{if(Y.length!==X)throw new Error(`Fp.fromBytes: expected ${X}, got ${Y.length}`);return Q?V8(Y):W0(Y)}});return Object.freeze(G)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */var l$=BigInt(0),d8=BigInt(1);function L0($,J){let Q=(Z,X)=>{let K=X.negate();return Z?K:X},q=(Z)=>{let X=Math.ceil(J/Z)+1,K=2**(Z-1);return{windows:X,windowSize:K}};return{constTimeNegate:Q,unsafeLadder(Z,X){let K=$.ZERO,G=Z;while(X>l$){if(X&d8)K=K.add(G);G=G.double(),X>>=d8}return K},precomputeWindow(Z,X){let{windows:K,windowSize:G}=q(X),Y=[],V=Z,N=V;for(let T=0;T<K;T++){N=V,Y.push(N);for(let z=1;z<G;z++)N=N.add(V),Y.push(N);V=N.double()}return Y},wNAF(Z,X,K){let{windows:G,windowSize:Y}=q(Z),V=$.ZERO,N=$.BASE,T=BigInt(2**Z-1),z=2**Z,S=BigInt(Z);for(let W=0;W<G;W++){let A=W*Y,g=Number(K&T);if(K>>=S,g>Y)g-=z,K+=d8;let b=A,k=A+Math.abs(g)-1,x=W%2!==0,R=g<0;if(g===0)N=N.add(Q(x,X[b]));else V=V.add(Q(R,X[k]))}return{p:V,f:N}},wNAFCached(Z,X,K,G){let Y=Z._WINDOW_SIZE||1,V=X.get(Z);if(!V){if(V=this.precomputeWindow(Z,Y),Y!==1)X.set(Z,G(V))}return this.wNAF(Y,V,K)}}}function R0($){return w0($.Fp),j8($,{n:\"bigint\",h:\"bigint\",Gx:\"field\",Gy:\"field\"},{nBitLength:\"isSafeInteger\",nByteLength:\"isSafeInteger\"}),Object.freeze({...u8($.n,$.nBitLength),...$,...{p:$.Fp.ORDER}})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */var h=BigInt(0),c=BigInt(1),g8=BigInt(2),p$=BigInt(8),h$={zip215:!0};function i$($){let J=R0($);return j8($,{hash:\"function\",a:\"bigint\",d:\"bigint\",randomBytes:\"function\"},{adjustScalarBytes:\"function\",domain:\"function\",uvRatio:\"function\",mapToCurve:\"function\"}),Object.freeze({...J})}function B0($){let J=i$($),{Fp:Q,n:q,prehash:Z,hash:X,randomBytes:K,nByteLength:G,h:Y}=J,V=g8<<BigInt(G*8)-c,N=Q.create,T=J.uvRatio||((I,j)=>{try{return{isValid:!0,value:Q.sqrt(I*Q.inv(j))}}catch(U){return{isValid:!1,value:h}}}),z=J.adjustScalarBytes||((I)=>I),S=J.domain||((I,j,U)=>{if(j.length||U)throw new Error(\"Contexts/pre-hash are not supported\");return I}),W=(I)=>typeof I===\"bigint\"&&h<I,A=(I,j)=>W(I)&&W(j)&&I<j,g=(I)=>I===h||A(I,V);function b(I,j){if(A(I,j))return I;throw new Error(`Expected valid scalar < ${j}, got ${typeof I} ${I}`)}function k(I){return I===h?I:b(I,q)}let x=new Map;function R(I){if(!(I instanceof O))throw new Error(\"ExtendedPoint expected\")}class O{constructor(I,j,U,C){if(this.ex=I,this.ey=j,this.ez=U,this.et=C,!g(I))throw new Error(\"x required\");if(!g(j))throw new Error(\"y required\");if(!g(U))throw new Error(\"z required\");if(!g(C))throw new Error(\"t required\")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(I){if(I instanceof O)throw new Error(\"extended point not allowed\");let{x:j,y:U}=I||{};if(!g(j)||!g(U))throw new Error(\"invalid affine point\");return new O(j,U,c,N(j*U))}static normalizeZ(I){let j=Q.invertBatch(I.map((U)=>U.ez));return I.map((U,C)=>U.toAffine(j[C])).map(O.fromAffine)}_setWindowSize(I){this._WINDOW_SIZE=I,x.delete(this)}assertValidity(){let{a:I,d:j}=J;if(this.is0())throw new Error(\"bad point: ZERO\");let{ex:U,ey:C,ez:H,et:L}=this,w=N(U*U),D=N(C*C),B=N(H*H),f=N(B*B),F=N(w*I),u=N(B*N(F+D)),_=N(f+N(j*N(w*D)));if(u!==_)throw new Error(\"bad point: equation left != right (1)\");let n=N(U*C),o=N(H*L);if(n!==o)throw new Error(\"bad point: equation left != right (2)\")}equals(I){R(I);let{ex:j,ey:U,ez:C}=this,{ex:H,ey:L,ez:w}=I,D=N(j*w),B=N(H*C),f=N(U*w),F=N(L*C);return D===B&&f===F}is0(){return this.equals(O.ZERO)}negate(){return new O(N(-this.ex),this.ey,this.ez,N(-this.et))}double(){let{a:I}=J,{ex:j,ey:U,ez:C}=this,H=N(j*j),L=N(U*U),w=N(g8*N(C*C)),D=N(I*H),B=j+U,f=N(N(B*B)-H-L),F=D+L,u=F-w,_=D-L,n=N(f*u),o=N(F*_),D8=N(f*_),H8=N(u*F);return new O(n,o,H8,D8)}add(I){R(I);let{a:j,d:U}=J,{ex:C,ey:H,ez:L,et:w}=this,{ex:D,ey:B,ez:f,et:F}=I;if(j===BigInt(-1)){let s8=N((H-C)*(B+D)),e8=N((H+C)*(B-D)),f8=N(e8-s8);if(f8===h)return this.double();let $0=N(L*g8*F),J0=N(w*g8*f),Q0=J0+$0,q0=e8+s8,X0=J0-$0,s0=N(Q0*f8),e0=N(q0*X0),$$=N(Q0*X0),J$=N(f8*q0);return new O(s0,e0,J$,$$)}let u=N(C*D),_=N(H*B),n=N(w*U*F),o=N(L*f),D8=N((C+H)*(D+B)-u-_),H8=o-n,o8=o+n,t8=N(_-j*u),a0=N(D8*H8),n0=N(o8*t8),o0=N(D8*t8),t0=N(H8*o8);return new O(a0,n0,t0,o0)}subtract(I){return this.add(I.negate())}wNAF(I){return y.wNAFCached(this,x,I,O.normalizeZ)}multiply(I){let{p:j,f:U}=this.wNAF(b(I,q));return O.normalizeZ([j,U])[0]}multiplyUnsafe(I){let j=k(I);if(j===h)return m;if(this.equals(m)||j===c)return this;if(this.equals(r))return this.wNAF(j).p;return y.unsafeLadder(this,j)}isSmallOrder(){return this.multiplyUnsafe(Y).is0()}isTorsionFree(){return y.unsafeLadder(this,q).is0()}toAffine(I){let{ex:j,ey:U,ez:C}=this,H=this.is0();if(I==null)I=H?p$:Q.inv(C);let L=N(j*I),w=N(U*I),D=N(C*I);if(H)return{x:h,y:c};if(D!==c)throw new Error(\"invZ was invalid\");return{x:L,y:w}}clearCofactor(){let{h:I}=J;if(I===c)return this;return this.multiplyUnsafe(I)}static fromHex(I,j=!1){let{d:U,a:C}=J,H=Q.BYTES;I=i(\"pointHex\",I,H);let L=I.slice(),w=I[H-1];L[H-1]=w&-129;let D=V8(L);if(D===h);else if(j)b(D,V);else b(D,Q.ORDER);let B=N(D*D),f=N(B-c),F=N(U*B-C),{isValid:u,value:_}=T(f,F);if(!u)throw new Error(\"Point.fromHex: invalid y coordinate\");let n=(_&c)===c,o=(w&128)!==0;if(!j&&_===h&&o)throw new Error(\"Point.fromHex: x=0 and x_0=1\");if(o!==n)_=N(-_);return O.fromAffine({x:_,y:D})}static fromPrivateKey(I){return a(I).point}toRawBytes(){let{x:I,y:j}=this.toAffine(),U=k8(j,Q.BYTES);return U[U.length-1]|=I&c?128:0,U}toHex(){return B8(this.toRawBytes())}}O.BASE=new O(J.Gx,J.Gy,c,N(J.Gx*J.Gy)),O.ZERO=new O(h,c,c,h);let{BASE:r,ZERO:m}=O,y=L0(O,G*8);function q8(I){return E(I,q)}function K8(I){return q8(V8(I))}function a(I){let j=G;I=i(\"private key\",I,j);let U=i(\"hashed private key\",X(I),2*j),C=z(U.slice(0,j)),H=U.slice(j,2*j),L=K8(C),w=r.multiply(L),D=w.toRawBytes();return{head:C,prefix:H,scalar:L,point:w,pointBytes:D}}function z8(I){return a(I).pointBytes}function T8(I=new Uint8Array,...j){let U=c8(...j);return K8(X(S(U,i(\"context\",I),!!Z)))}function S8(I,j,U={}){if(I=i(\"message\",I),Z)I=Z(I);let{prefix:C,scalar:H,pointBytes:L}=a(j),w=T8(U.context,C,I),D=r.multiply(w).toRawBytes(),B=T8(U.context,D,L,I),f=q8(w+B*H);k(f);let F=c8(D,k8(f,Q.BYTES));return i(\"result\",F,G*2)}let i0=h$;function r0(I,j,U,C=i0){let{context:H,zip215:L}=C,w=Q.BYTES;if(I=i(\"signature\",I,2*w),j=i(\"message\",j),Z)j=Z(j);let D=V8(I.slice(w,2*w)),B,f,F;try{B=O.fromHex(U,L),f=O.fromHex(I.slice(0,w),L),F=r.multiplyUnsafe(D)}catch(n){return!1}if(!L&&B.isSmallOrder())return!1;let u=T8(H,f.toRawBytes(),B.toRawBytes(),j);return f.add(B.multiplyUnsafe(u)).subtract(F).clearCofactor().equals(O.ZERO)}return r._setWindowSize(8),{CURVE:J,getPublicKey:z8,sign:S8,verify:r0,ExtendedPoint:O,utils:{getExtendedPublicKey:a,randomPrivateKey:()=>K(Q.BYTES),precompute(I=8,j=O.BASE){return j._setWindowSize(I),j.multiply(BigInt(3)),j}}}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */var l8=BigInt(\"57896044618658097711785492504343953926634992332820282019728792003956564819949\"),g0=BigInt(\"19681161376707505956807079304988542015446066515923890162744021073123829784752\"),NQ=BigInt(0),r$=BigInt(1),v0=BigInt(2),YQ=BigInt(3),a$=BigInt(5),n$=BigInt(8);function o$($){let J=BigInt(10),Q=BigInt(20),q=BigInt(40),Z=BigInt(80),X=l8,G=$*$%X*$%X,Y=p(G,v0,X)*G%X,V=p(Y,r$,X)*$%X,N=p(V,a$,X)*V%X,T=p(N,J,X)*N%X,z=p(T,Q,X)*T%X,S=p(z,q,X)*z%X,W=p(S,Z,X)*S%X,A=p(W,Z,X)*S%X,g=p(A,J,X)*N%X;return{pow_p_5_8:p(g,v0,X)*$%X,b2:G}}function t$($){return $[0]&=248,$[31]&=127,$[31]|=64,$}function s$($,J){let Q=l8,q=E(J*J*J,Q),Z=E(q*q*J,Q),X=o$($*Z).pow_p_5_8,K=E($*q*X,Q),G=E(J*K*K,Q),Y=K,V=E(K*g0,Q),N=G===$,T=G===E(-$,Q),z=G===E(-$*g0,Q);if(N)K=Y;if(T||z)K=V;if(H0(K,Q))K=E(-K,Q);return{isValid:N||T,value:K}}var e$=(()=>A0(l8,void 0,!0))(),$J=(()=>({a:BigInt(-1),d:BigInt(\"37095705934669439343138083508754565189542113879843219016388785533085940283555\"),Fp:e$,n:BigInt(\"7237005577332262213973186563042994240857116359379907606001950938285454250989\"),h:n$,Gx:BigInt(\"15112221349535400772501151409588531511454012693041857206046113283949847762202\"),Gy:BigInt(\"46316835694926478169428394003475163141307993866256225615783033603165251855960\"),hash:W8,randomBytes:I0,adjustScalarBytes:t$,uvRatio:s$}))(),v8=(()=>B0($J))();class p8 extends O8{constructor($,J){super();this.finished=!1,this.destroyed=!1,N0($);let Q=M8(J);if(this.iHash=$.create(),typeof this.iHash.update!==\"function\")throw new Error(\"Expected instance of class which extends utils.Hash\");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let q=this.blockLen,Z=new Uint8Array(q);Z.set(Q.length>q?$.create().update(Q).digest():Q);for(let X=0;X<Z.length;X++)Z[X]^=54;this.iHash.update(Z),this.oHash=$.create();for(let X=0;X<Z.length;X++)Z[X]^=106;this.oHash.update(Z),Z.fill(0)}update($){return G8(this),this.iHash.update($),this}digestInto($){G8(this),d($,this.outputLen),this.finished=!0,this.iHash.digestInto($),this.oHash.update($),this.oHash.digestInto($),this.destroy()}digest(){let $=new Uint8Array(this.oHash.outputLen);return this.digestInto($),$}_cloneInto($){$||($=Object.create(Object.getPrototypeOf(this),{}));let{oHash:J,iHash:Q,finished:q,destroyed:Z,blockLen:X,outputLen:K}=this;return $=$,$.finished=q,$.destroyed=Z,$.blockLen=X,$.outputLen=K,$.oHash=J._cloneInto($.oHash),$.iHash=Q._cloneInto($.iHash),$}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}var E8=($,J,Q)=>new p8($,J).update(Q).digest();E8.create=($,J)=>new p8($,J);var JJ=new Uint8Array([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),P0=new Uint8Array(new Array(16).fill(0).map(($,J)=>J)),QJ=P0.map(($)=>(9*$+5)%16),h8=[P0],i8=[QJ];for(let $=0;$<4;$++)for(let J of[h8,i8])J.push(J[$].map((Q)=>JJ[Q]));var f0=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map(($)=>new Uint8Array($)),qJ=h8.map(($,J)=>$.map((Q)=>f0[J][Q])),XJ=i8.map(($,J)=>$.map((Q)=>f0[J][Q])),ZJ=new Uint32Array([0,1518500249,1859775393,2400959708,2840853838]),NJ=new Uint32Array([1352829926,1548603684,1836072691,2053994217,0]);function E0($,J,Q,q){if($===0)return J^Q^q;else if($===1)return J&Q|~J&q;else if($===2)return(J|~Q)^q;else if($===3)return J&q|Q&~q;else return J^(Q|~q)}var P8=new Uint32Array(16);class F0 extends Z8{constructor(){super(64,20,8,!0);this.h0=1732584193,this.h1=-271733879,this.h2=-1732584194,this.h3=271733878,this.h4=-1009589776}get(){let{h0:$,h1:J,h2:Q,h3:q,h4:Z}=this;return[$,J,Q,q,Z]}set($,J,Q,q,Z){this.h0=$|0,this.h1=J|0,this.h2=Q|0,this.h3=q|0,this.h4=Z|0}process($,J){for(let z=0;z<16;z++,J+=4)P8[z]=$.getUint32(J,!0);let Q=this.h0|0,q=Q,Z=this.h1|0,X=Z,K=this.h2|0,G=K,Y=this.h3|0,V=Y,N=this.h4|0,T=N;for(let z=0;z<5;z++){let S=4-z,W=ZJ[z],A=NJ[z],g=h8[z],b=i8[z],k=qJ[z],x=XJ[z];for(let R=0;R<16;R++){let O=U8(Q+E0(z,Z,K,Y)+P8[g[R]]+W,k[R])+N|0;Q=N,N=Y,Y=U8(K,10)|0,K=Z,Z=O}for(let R=0;R<16;R++){let O=U8(q+E0(S,X,G,V)+P8[b[R]]+A,x[R])+T|0;q=T,T=V,V=U8(G,10)|0,G=X,X=O}}this.set(this.h1+K+V|0,this.h2+Y+T|0,this.h3+N+q|0,this.h4+Q+X|0,this.h0+Z+G|0)}roundClean(){P8.fill(0)}destroy(){this.destroyed=!0,this.buffer.fill(0),this.set(0,0,0,0,0)}}var b0=I8(()=>new F0);var YJ=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),J8=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Q8=new Uint32Array(64);class x0 extends Z8{constructor(){super(64,32,8,!1);this.A=J8[0]|0,this.B=J8[1]|0,this.C=J8[2]|0,this.D=J8[3]|0,this.E=J8[4]|0,this.F=J8[5]|0,this.G=J8[6]|0,this.H=J8[7]|0}get(){let{A:$,B:J,C:Q,D:q,E:Z,F:X,G:K,H:G}=this;return[$,J,Q,q,Z,X,K,G]}set($,J,Q,q,Z,X,K,G){this.A=$|0,this.B=J|0,this.C=Q|0,this.D=q|0,this.E=Z|0,this.F=X|0,this.G=K|0,this.H=G|0}process($,J){for(let N=0;N<16;N++,J+=4)Q8[N]=$.getUint32(J,!1);for(let N=16;N<64;N++){let T=Q8[N-15],z=Q8[N-2],S=l(T,7)^l(T,18)^T>>>3,W=l(z,17)^l(z,19)^z>>>10;Q8[N]=W+Q8[N-7]+S+Q8[N-16]|0}let{A:Q,B:q,C:Z,D:X,E:K,F:G,G:Y,H:V}=this;for(let N=0;N<64;N++){let T=l(K,6)^l(K,11)^l(K,25),z=V+T+V0(K,G,Y)+YJ[N]+Q8[N]|0,W=(l(Q,2)^l(Q,13)^l(Q,22))+j0(Q,q,Z)|0;V=Y,Y=G,G=K,K=X+z|0,X=Z,Z=q,q=Q,Q=z+W|0}Q=Q+this.A|0,q=q+this.B|0,Z=Z+this.C|0,X=X+this.D|0,K=K+this.E|0,G=G+this.F|0,Y=Y+this.G|0,V=V+this.H|0,this.set(Q,q,Z,X,K,G,Y,V)}roundClean(){Q8.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}var _0=I8(()=>new x0);/*! micro-key-producer - MIT License (c) 2024 Paul Miller (paulmillr.com) */var KJ=A8(\"ed25519 seed\"),r8=2147483648,y0=new Uint8Array([0]);function c0($,...J){if(typeof $===\"string\")$=G0($);return d($,...J),$}var GJ=($)=>b0(_0($)),IJ=($)=>X8($).getUint32(0,!1),a8=($)=>{if(!Number.isSafeInteger($)||$<0||$>4294967295)throw new Error(`Invalid number=${$}. Should be from 0 to 2 ** 32 - 1`);let J=new Uint8Array(4);return X8(J).setUint32(0,$,!1),J};class C8{get publicKeyRaw(){return v8.getPublicKey(this.privateKey)}get publicKey(){return L8(y0,this.publicKeyRaw)}get pubHash(){return GJ(this.publicKey)}get fingerprint(){return IJ(this.pubHash)}get fingerprintHex(){return F8(a8(this.fingerprint))}get parentFingerprintHex(){return F8(a8(this.parentFingerprint))}static fromMasterSeed($){if($=c0($),8*$.length<128||8*$.length>512)throw new Error(`HDKey: wrong seed length=${$.length}. Should be between 128 and 512 bits; 256 bits is advised)`);let J=E8(W8,KJ,$);return new C8({privateKey:J.slice(0,32),chainCode:J.slice(32)})}constructor($){if(this.depth=0,this.index=0,this.parentFingerprint=0,!$||typeof $!==\"object\")throw new Error(\"HDKey.constructor must not be called directly\");if(d($.privateKey,32),d($.chainCode,32),this.depth=$.depth||0,this.index=$.index||0,this.parentFingerprint=$.parentFingerprint||0,!this.depth){if(this.parentFingerprint||this.index)throw new Error(\"HDKey: zero depth with non-zero index/parent fingerprint\")}this.chainCode=$.chainCode,this.privateKey=$.privateKey}derive($,J=!1){if(!/^[mM]'?/.test($))throw new Error('Path must start with \"m\" or \"M\"');if(/^[mM]'?$/.test($))return this;let Q=$.replace(/^[mM]'?\\//,\"\").split(\"/\"),q=this;for(let Z of Q){let X=/^(\\d+)('?)$/.exec(Z);if(!X||X.length!==3)throw new Error(`Invalid child index: ${Z}`);let K=+X[1];if(!Number.isSafeInteger(K)||K>=r8)throw new Error(\"Invalid index\");if(J||X[2]===\"'\")K+=r8;q=q.deriveChild(K)}return q}deriveChild($){if($<r8)throw new Error(`Non-hardened child derivation not possible for Ed25519 (index=${$})`);let J=L8(y0,this.privateKey,a8($)),Q=E8(W8,this.chainCode,J);return new C8({chainCode:Q.slice(32),depth:this.depth+1,parentFingerprint:this.fingerprint,index:$,privateKey:Q.slice(0,32)})}sign($){return v8.sign($,this.privateKey)}verify($,J){return J=c0(J,64),v8.verify(J,$,this.publicKeyRaw)}}function n8($){try{let J=new Y8($);return Y8.isOnCurve(J.toBytes())}catch(J){return!1}}function wJ({phrase:$,derivationPath:J=SJ.SOL}){let Q=VJ($),q=C8.fromMasterSeed(Q);return WJ.fromSeed(q.derive(J,!0).privateKey)}function AJ($){return $.publicKey.toString()}async function LJ({connection:$,address:J}){let Q=await $.getParsedTokenAccountsByOwner(new Y8(J),{programId:jJ}),X=(await new MJ().resolve()).filterByChainId(101).getList(),K=[];for await(let G of Q.value){let Y=G.account.data.parsed.info,V=Y.tokenAmount.uiAmount,N=Y.mint,T=Y.tokenAmount.decimals,z=X.find((W)=>W.address===N),S=z?z.symbol:\"UNKNOWN\";if(V>BigInt(0))K.push(new l0({value:HJ.fromBigInt(Y.tokenAmount.amount,T),decimal:T,identifier:`${p0.Solana}.${S}-${J.toString()}`}))}return K}function RJ($){return async(J)=>{let Q=await $.getBalance(new Y8(J)),q=await LJ({connection:$,address:J});return[l0.from({chain:p0.Solana,value:BigInt(Q)}),...q]}}async function h0({tokenAddress:$,recipient:J,from:Q,connection:q,amount:Z,decimals:X}){let K=new d0,G=new Y8($),Y=await m0(G,Q),V=new Y8(J),N=await m0(G,V);try{return await UJ(q,N),K.add(TJ(Y,G,N,Q,Z,X))}catch(T){return K.add(zJ(Q,N,V,G))}}function BJ($){return async({recipient:J,assetValue:Q,fromKeypair:q})=>{if(!n8(J))throw new u0(\"core_transaction_invalid_recipient_address\");let Z=Q.isGasAsset?new d0().add(kJ.transfer({fromPubkey:q.publicKey,lamports:Q.getBaseValue(\"number\"),toPubkey:new Y8(J)})):Q.address?await h0({amount:Q.getBaseValue(\"number\"),connection:$,decimals:Q.decimal,from:q.publicKey,recipient:J,tokenAddress:Q.address}):void 0;if(!Z)throw new u0(\"core_transaction_invalid_sender_address\");let X=await $.getLatestBlockhash();return Z.recentBlockhash=X.blockhash,Z.feePayer=q.publicKey,CJ($,Z,[q])}}var gJ=({rpcUrl:$=DJ.Solana}={})=>{let J=new OJ($,\"confirmed\");return{connection:J,createKeysForPath:wJ,getAddressFromKeys:AJ,getBalance:RJ(J),transfer:BJ(J),validateAddress:n8}};export{n8 as validateAddress,h0 as createSolanaTokenTransaction,gJ as SOLToolbox};\n\n//# debugId=EC774F52175A122F64756E2164756E21\n"],"names":["number","n","Number","isSafeInteger","Error","bytes","b","lengths","a","Uint8Array","constructor","name","length","includes","hash","h","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","createView","arr","DataView","buffer","byteOffset","byteLength","Uint32Array","toBytes","data","str","TextEncoder","encode","utf8ToBytes","abytes","Hash","clone","this","_cloneInto","toStr","toString","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","HMAC","_key","super","assertHash","key","iHash","pad","set","i","oHash","fill","buf","assertExists","digestInto","assertBytes","destroy","to","Object","getPrototypeOf","hmac","message","pbkdf2Init","_password","_salt","_opts","opts","defaults","undefined","call","assign","checkOpts","dkLen","asyncTick","c","assertNumber","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","u","HashMD","padOffset","isLE","pos","view","len","take","Math","subarray","process","dataView","roundClean","value","setBigUint64","_32n","BigInt","_u32_max","wh","wl","l","setUint32","oview","outLen","state","get","res","slice","U32_MASK64","fromBig","le","u64","split","lst","Ah","Al","toBig","shrSH","_l","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","offset","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","nfkd","TypeError","normalize","norm","words","passphrase","mnemonicToSeedSync","mnemonic","ti","Ti","setInt32","ui","pbkdf2","Z0","$","d","J","Q$","G8","w8","globalThis","crypto","X8","U8","q$","Array","from","padStart","F8","Q","t","K0","A8","M8","L8","q","Z","X","O8","I8","I0","getRandomValues","V0","j0","Z8","K","G","Y0","N","Y","V","X$","R8","b8","z0","M","N$","Y$","K$","G$","I$","V$","j$","z$","T$","U$","M$","O$","W$","C$","S$","D$","H$","A$","w$","R$","B$","e","$8","T0","T","z","S","W","A","k","x","R","O","r","m","y","q8","K8","z8","g","T8","S8","W8","g$","v$","x8","_8","E$","B8","M0","U0","O0","charCodeAt","V8","reverse","y8","k8","c8","k0","P$","bigint","function","boolean","string","stringOrUint8Array","array","isArray","field","Fp","isValid","j8","String","entries","P","v","N8","F$","m8","C0","S0","E","_$","p","D0","c$","pow","eql","sqr","mul","sub","ONE","neg","ZERO","y$","m$","u8","nBitLength","nByteLength","ceil","A0","freeze","ORDER","BITS","BYTES","MASK","is0","isOdd","u$","div","sqrN","addN","subN","mulN","inv","sqrt","invertBatch","reduce","reduceRight","d$","cmov","fromBytes","W0","l$","d8","R0","w0","Gx","Gy","g8","p$","h$","zip215","B0","randomBytes","adjustScalarBytes","domain","uvRatio","mapToCurve","i$","prehash","I","j","U","Map","C","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","_setWindowSize","_WINDOW_SIZE","delete","assertValidity","H","L","w","D","B","f","F","equals","negate","double","_","o","D8","H8","s8","e8","f8","$0","J0","Q0","q0","X0","s0","e0","$$","J$","o8","t8","a0","n0","o0","t0","subtract","wNAF","wNAFCached","multiply","multiplyUnsafe","unsafeLadder","isSmallOrder","isTorsionFree","clearCofactor","fromHex","fromPrivateKey","point","toRawBytes","toHex","BASE","windows","windowSize","constTimeNegate","precomputeWindow","push","abs","L0","head","prefix","scalar","pointBytes","i0","CURVE","getPublicKey","sign","context","verify","ExtendedPoint","utils","getExtendedPublicKey","randomPrivateKey","precompute","l8","g0","r$","v0","a$","n$","t$","s$","pow_p_5_8","b2","o$","H0","e$","v8","p8","N0","E8","JJ","P0","QJ","h8","i8","f0","qJ","XJ","ZJ","NJ","E0","P8","F0","h0","h1","h2","h3","h4","b0","YJ","J8","Q8","x0","_0","KJ","r8","y0","c0","G0","a8","C8","publicKeyRaw","privateKey","publicKey","pubHash","fingerprint","fingerprintHex","parentFingerprintHex","parentFingerprint","fromMasterSeed","chainCode","depth","index","derive","test","replace","exec","deriveChild","n8","Y8","isOnCurve","wJ","phrase","derivationPath","SJ","SOL","VJ","WJ","fromSeed","AJ","RJ","async","getBalance","connection","address","getParsedTokenAccountsByOwner","programId","jJ","MJ","resolve","filterByChainId","getList","account","parsed","info","tokenAmount","uiAmount","mint","decimals","find","symbol","l0","HJ","fromBigInt","amount","decimal","identifier","p0","Solana","LJ","chain","tokenAddress","recipient","d0","m0","UJ","TJ","zJ","BJ","assetValue","fromKeypair","u0","isGasAsset","kJ","transfer","fromPubkey","lamports","getBaseValue","toPubkey","getLatestBlockhash","recentBlockhash","blockhash","feePayer","CJ","gJ","rpcUrl","DJ","OJ","createKeysForPath","getAddressFromKeys","validateAddress"],"sourceRoot":""}