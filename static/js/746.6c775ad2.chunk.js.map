{"version":3,"file":"static/js/746.6c775ad2.chunk.js","mappings":"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","sources":["../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/_assert.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/utils.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/hmac.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/pbkdf2.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/_md.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/_u64.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@noble/hashes/src/sha512.ts","../node_modules/@swapkit/toolbox-solana/node_modules/@scure/bip39/esm/index.js","../node_modules/@swapkit/toolbox-solana/dist/index.js"],"sourcesContent":["function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assertHash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assertNumber(c);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Choice: a ? b : c\nexport const Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n","/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nimport { bytes as assertBytes, number as assertNumber } from '@noble/hashes/_assert';\nimport { pbkdf2, pbkdf2Async } from '@noble/hashes/pbkdf2';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { utils as baseUtils } from '@scure/base';\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\n// https://tonsky.me/blog/unicode/#why-is-a----\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    assertBytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nexport function generateMnemonic(wordlist, strength = 128) {\n    assertNumber(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic(randomBytes(strength / 8), wordlist);\n}\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([(sha256(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Wordlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return baseUtils.chain(baseUtils.checksum(1, calcChecksum), baseUtils.radix2(11, true), baseUtils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nexport function entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nexport function validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nexport function mnemonicToSeed(mnemonic, passphrase = '') {\n    return pbkdf2Async(sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nexport function mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return pbkdf2(sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\n","import{mnemonicToSeedSync as GJ}from\"@scure/bip39\";import{AccountLayout as VJ,TOKEN_PROGRAM_ID as jJ,createAssociatedTokenAccountInstruction as zJ,createTransferCheckedInstruction as UJ,getAccount as TJ,getAssociatedTokenAddress as c0,getMint as MJ}from\"@solana/spl-token\";import{Connection as OJ,Keypair as WJ,PublicKey as Y8,SystemProgram as kJ,Transaction as m0,sendAndConfirmTransaction as CJ}from\"@solana/web3.js\";import{AssetValue as d0,Chain as l0,DerivationPath as SJ,RPCUrl as DJ,SwapKitError as u0,SwapKitNumber as HJ}from\"@swapkit/helpers\";function X0($){if(!Number.isSafeInteger($)||$<0)throw new Error(`positive integer expected, not ${$}`)}function J$($){return $ instanceof Uint8Array||$!=null&&typeof $===\"object\"&&$.constructor.name===\"Uint8Array\"}function d($,...J){if(!J$($))throw new Error(\"Uint8Array expected\");if(J.length>0&&!J.includes($.length))throw new Error(`Uint8Array expected of length ${J}, not of length=${$.length}`)}function Z0($){if(typeof $!==\"function\"||typeof $.create!==\"function\")throw new Error(\"Hash should be wrapped by utils.wrapConstructor\");X0($.outputLen),X0($.blockLen)}function K8($,J=!0){if($.destroyed)throw new Error(\"Hash instance has been destroyed\");if(J&&$.finished)throw new Error(\"Hash#digest() has already been called\")}function N0($,J){d($);const Q=J.outputLen;if($.length<Q)throw new Error(`digestInto() expects output buffer of length at least ${Q}`)}var w8=typeof globalThis===\"object\"&&\"crypto\"in globalThis?globalThis.crypto:void 0;function F8($){d($);let J=\"\";for(let Q=0;Q<$.length;Q++)J+=Q$[$[Q]];return J}function Y0($){if($>=t._0&&$<=t._9)return $-t._0;if($>=t._A&&$<=t._F)return $-(t._A-10);if($>=t._a&&$<=t._f)return $-(t._a-10);return}function I0($){if(typeof $!==\"string\")throw new Error(\"hex string expected, got \"+typeof $);const J=$.length,Q=J/2;if(J%2)throw new Error(\"padded hex string expected, got unpadded hex of length \"+J);const q=new Uint8Array(Q);for(let Z=0,X=0;Z<Q;Z++,X+=2){const I=Y0($.charCodeAt(X)),K=Y0($.charCodeAt(X+1));if(I===void 0||K===void 0){const Y=$[X]+$[X+1];throw new Error('hex string expected, got non-hex character \"'+Y+'\" at index '+X)}q[Z]=I*16+K}return q}function A8($){if(typeof $!==\"string\")throw new Error(`utf8ToBytes expected string, got ${typeof $}`);return new Uint8Array(new TextEncoder().encode($))}function M8($){if(typeof $===\"string\")$=A8($);return d($),$}function L8(...$){let J=0;for(let q=0;q<$.length;q++){const Z=$[q];d(Z),J+=Z.length}const Q=new Uint8Array(J);for(let q=0,Z=0;q<$.length;q++){const X=$[q];Q.set(X,Z),Z+=X.length}return Q}function G8($){const J=(q)=>$().update(M8(q)).digest(),Q=$();return J.outputLen=Q.outputLen,J.blockLen=Q.blockLen,J.create=()=>$(),J}function K0($=32){if(w8&&typeof w8.getRandomValues===\"function\")return w8.getRandomValues(new Uint8Array($));throw new Error(\"crypto.getRandomValues must be defined\")}/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */var X8=($)=>new DataView($.buffer,$.byteOffset,$.byteLength),l=($,J)=>$<<32-J|$>>>J,T8=($,J)=>$<<J|$>>>32-J>>>0,xJ=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;var Q$=Array.from({length:256},($,J)=>J.toString(16).padStart(2,\"0\")),t={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};class O8{clone(){return this._cloneInto()}}var _J={}.toString;function q$($,J,Q,q){if(typeof $.setBigUint64===\"function\")return $.setBigUint64(J,Q,q);const Z=BigInt(32),X=BigInt(4294967295),I=Number(Q>>Z&X),K=Number(Q&X),Y=q?4:0,V=q?0:4;$.setUint32(J+Y,I,q),$.setUint32(J+V,K,q)}var G0=($,J,Q)=>$&J^~$&Q,V0=($,J,Q)=>$&J^$&Q^J&Q;class Z8 extends O8{constructor($,J,Q,q){super();this.blockLen=$,this.outputLen=J,this.padOffset=Q,this.isLE=q,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array($),this.view=X8(this.buffer)}update($){K8(this);const{view:J,buffer:Q,blockLen:q}=this;$=M8($);const Z=$.length;for(let X=0;X<Z;){const I=Math.min(q-this.pos,Z-X);if(I===q){const K=X8($);for(;q<=Z-X;X+=q)this.process(K,X);continue}if(Q.set($.subarray(X,X+I),this.pos),this.pos+=I,X+=I,this.pos===q)this.process(J,0),this.pos=0}return this.length+=$.length,this.roundClean(),this}digestInto($){K8(this),N0($,this),this.finished=!0;const{buffer:J,view:Q,blockLen:q,isLE:Z}=this;let{pos:X}=this;if(J[X++]=128,this.buffer.subarray(X).fill(0),this.padOffset>q-X)this.process(Q,0),X=0;for(let N=X;N<q;N++)J[N]=0;q$(Q,q-8,BigInt(this.length*8),Z),this.process(Q,0);const I=X8($),K=this.outputLen;if(K%4)throw new Error(\"_sha2: outputLen should be aligned to 32bit\");const Y=K/4,V=this.get();if(Y>V.length)throw new Error(\"_sha2: outputLen bigger than state\");for(let N=0;N<Y;N++)I.setUint32(4*N,V[N],Z)}digest(){const{buffer:$,outputLen:J}=this;this.digestInto($);const Q=$.slice(0,J);return this.destroy(),Q}_cloneInto($){$||($=new this.constructor),$.set(...this.get());const{blockLen:J,buffer:Q,length:q,finished:Z,destroyed:X,pos:I}=this;if($.length=q,$.pos=I,$.finished=Z,$.destroyed=X,q%J)$.buffer.set(Q);return $}}function j0($,J=!1){if(J)return{h:Number($&R8),l:Number($>>b8&R8)};return{h:Number($>>b8&R8)|0,l:Number($&R8)|0}}function X$($,J=!1){let Q=new Uint32Array($.length),q=new Uint32Array($.length);for(let Z=0;Z<$.length;Z++){const{h:X,l:I}=j0($[Z],J);[Q[Z],q[Z]]=[X,I]}return[Q,q]}function W$($,J,Q,q){const Z=(J>>>0)+(q>>>0);return{h:$+Q+(Z/4294967296|0)|0,l:Z|0}}var R8=BigInt(4294967295),b8=BigInt(32),Z$=($,J)=>BigInt($>>>0)<<b8|BigInt(J>>>0),N$=($,J,Q)=>$>>>Q,Y$=($,J,Q)=>$<<32-Q|J>>>Q,I$=($,J,Q)=>$>>>Q|J<<32-Q,K$=($,J,Q)=>$<<32-Q|J>>>Q,G$=($,J,Q)=>$<<64-Q|J>>>Q-32,V$=($,J,Q)=>$>>>Q-32|J<<64-Q,j$=($,J)=>J,z$=($,J)=>$,U$=($,J,Q)=>$<<Q|J>>>32-Q,T$=($,J,Q)=>J<<Q|$>>>32-Q,M$=($,J,Q)=>J<<Q-32|$>>>64-Q,O$=($,J,Q)=>$<<Q-32|J>>>64-Q,k$=($,J,Q)=>($>>>0)+(J>>>0)+(Q>>>0),C$=($,J,Q,q)=>J+Q+q+($/4294967296|0)|0,S$=($,J,Q,q)=>($>>>0)+(J>>>0)+(Q>>>0)+(q>>>0),D$=($,J,Q,q,Z)=>J+Q+q+Z+($/4294967296|0)|0,H$=($,J,Q,q,Z)=>($>>>0)+(J>>>0)+(Q>>>0)+(q>>>0)+(Z>>>0),w$=($,J,Q,q,Z,X)=>J+Q+q+Z+X+($/4294967296|0)|0;var A$={fromBig:j0,split:X$,toBig:Z$,shrSH:N$,shrSL:Y$,rotrSH:I$,rotrSL:K$,rotrBH:G$,rotrBL:V$,rotr32H:j$,rotr32L:z$,rotlSH:U$,rotlSL:T$,rotlBH:M$,rotlBL:O$,add:W$,add3L:k$,add3H:C$,add4L:S$,add4H:D$,add5H:w$,add5L:H$},M=A$;var[L$,R$]=(()=>M.split([\"0x428a2f98d728ae22\",\"0x7137449123ef65cd\",\"0xb5c0fbcfec4d3b2f\",\"0xe9b5dba58189dbbc\",\"0x3956c25bf348b538\",\"0x59f111f1b605d019\",\"0x923f82a4af194f9b\",\"0xab1c5ed5da6d8118\",\"0xd807aa98a3030242\",\"0x12835b0145706fbe\",\"0x243185be4ee4b28c\",\"0x550c7dc3d5ffb4e2\",\"0x72be5d74f27b896f\",\"0x80deb1fe3b1696b1\",\"0x9bdc06a725c71235\",\"0xc19bf174cf692694\",\"0xe49b69c19ef14ad2\",\"0xefbe4786384f25e3\",\"0x0fc19dc68b8cd5b5\",\"0x240ca1cc77ac9c65\",\"0x2de92c6f592b0275\",\"0x4a7484aa6ea6e483\",\"0x5cb0a9dcbd41fbd4\",\"0x76f988da831153b5\",\"0x983e5152ee66dfab\",\"0xa831c66d2db43210\",\"0xb00327c898fb213f\",\"0xbf597fc7beef0ee4\",\"0xc6e00bf33da88fc2\",\"0xd5a79147930aa725\",\"0x06ca6351e003826f\",\"0x142929670a0e6e70\",\"0x27b70a8546d22ffc\",\"0x2e1b21385c26c926\",\"0x4d2c6dfc5ac42aed\",\"0x53380d139d95b3df\",\"0x650a73548baf63de\",\"0x766a0abb3c77b2a8\",\"0x81c2c92e47edaee6\",\"0x92722c851482353b\",\"0xa2bfe8a14cf10364\",\"0xa81a664bbc423001\",\"0xc24b8b70d0f89791\",\"0xc76c51a30654be30\",\"0xd192e819d6ef5218\",\"0xd69906245565a910\",\"0xf40e35855771202a\",\"0x106aa07032bbd1b8\",\"0x19a4c116b8d2d0c8\",\"0x1e376c085141ab53\",\"0x2748774cdf8eeb99\",\"0x34b0bcb5e19b48a8\",\"0x391c0cb3c5c95a63\",\"0x4ed8aa4ae3418acb\",\"0x5b9cca4f7763e373\",\"0x682e6ff3d6b2b8a3\",\"0x748f82ee5defb2fc\",\"0x78a5636f43172f60\",\"0x84c87814a1f0ab72\",\"0x8cc702081a6439ec\",\"0x90befffa23631e28\",\"0xa4506cebde82bde9\",\"0xbef9a3f7b2c67915\",\"0xc67178f2e372532b\",\"0xca273eceea26619c\",\"0xd186b8c721c0c207\",\"0xeada7dd6cde0eb1e\",\"0xf57d4f7fee6ed178\",\"0x06f067aa72176fba\",\"0x0a637dc5a2c898a6\",\"0x113f9804bef90dae\",\"0x1b710b35131c471b\",\"0x28db77f523047d84\",\"0x32caab7b40c72493\",\"0x3c9ebe0a15c9bebc\",\"0x431d67c49c100d4c\",\"0x4cc5d4becb3e42b6\",\"0x597f299cfc657e2a\",\"0x5fcb6fab3ad6faec\",\"0x6c44198c4a475817\"].map(($)=>BigInt($))))(),e=new Uint32Array(80),$8=new Uint32Array(80);class z0 extends Z8{constructor(){super(128,64,16,!1);this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:$,Al:J,Bh:Q,Bl:q,Ch:Z,Cl:X,Dh:I,Dl:K,Eh:Y,El:V,Fh:N,Fl:U,Gh:z,Gl:S,Hh:C,Hl:A}=this;return[$,J,Q,q,Z,X,I,K,Y,V,N,U,z,S,C,A]}set($,J,Q,q,Z,X,I,K,Y,V,N,U,z,S,C,A){this.Ah=$|0,this.Al=J|0,this.Bh=Q|0,this.Bl=q|0,this.Ch=Z|0,this.Cl=X|0,this.Dh=I|0,this.Dl=K|0,this.Eh=Y|0,this.El=V|0,this.Fh=N|0,this.Fl=U|0,this.Gh=z|0,this.Gl=S|0,this.Hh=C|0,this.Hl=A|0}process($,J){for(let W=0;W<16;W++,J+=4)e[W]=$.getUint32(J),$8[W]=$.getUint32(J+=4);for(let W=16;W<80;W++){const x=e[W-15]|0,R=$8[W-15]|0,O=M.rotrSH(x,R,1)^M.rotrSH(x,R,8)^M.shrSH(x,R,7),r=M.rotrSL(x,R,1)^M.rotrSL(x,R,8)^M.shrSL(x,R,7),u=e[W-2]|0,y=$8[W-2]|0,q8=M.rotrSH(u,y,19)^M.rotrBH(u,y,61)^M.shrSH(u,y,6),I8=M.rotrSL(u,y,19)^M.rotrBL(u,y,61)^M.shrSL(u,y,6),a=M.add4L(r,I8,$8[W-7],$8[W-16]),z8=M.add4H(a,O,q8,e[W-7],e[W-16]);e[W]=z8|0,$8[W]=a|0}let{Ah:Q,Al:q,Bh:Z,Bl:X,Ch:I,Cl:K,Dh:Y,Dl:V,Eh:N,El:U,Fh:z,Fl:S,Gh:C,Gl:A,Hh:g,Hl:b}=this;for(let W=0;W<80;W++){const x=M.rotrSH(N,U,14)^M.rotrSH(N,U,18)^M.rotrBH(N,U,41),R=M.rotrSL(N,U,14)^M.rotrSL(N,U,18)^M.rotrBL(N,U,41),O=N&z^~N&C,r=U&S^~U&A,u=M.add5L(b,R,r,R$[W],$8[W]),y=M.add5H(u,g,x,O,L$[W],e[W]),q8=u|0,I8=M.rotrSH(Q,q,28)^M.rotrBH(Q,q,34)^M.rotrBH(Q,q,39),a=M.rotrSL(Q,q,28)^M.rotrBL(Q,q,34)^M.rotrBL(Q,q,39),z8=Q&Z^Q&I^Z&I,U8=q&X^q&K^X&K;g=C|0,b=A|0,C=z|0,A=S|0,z=N|0,S=U|0,{h:N,l:U}=M.add(Y|0,V|0,y|0,q8|0),Y=I|0,V=K|0,I=Z|0,K=X|0,Z=Q|0,X=q|0;const S8=M.add3L(q8,a,U8);Q=M.add3H(S8,y,I8,z8),q=S8|0}({h:Q,l:q}=M.add(this.Ah|0,this.Al|0,Q|0,q|0)),{h:Z,l:X}=M.add(this.Bh|0,this.Bl|0,Z|0,X|0),{h:I,l:K}=M.add(this.Ch|0,this.Cl|0,I|0,K|0),{h:Y,l:V}=M.add(this.Dh|0,this.Dl|0,Y|0,V|0),{h:N,l:U}=M.add(this.Eh|0,this.El|0,N|0,U|0),{h:z,l:S}=M.add(this.Fh|0,this.Fl|0,z|0,S|0),{h:C,l:A}=M.add(this.Gh|0,this.Gl|0,C|0,A|0),{h:g,l:b}=M.add(this.Hh|0,this.Hl|0,g|0,b|0),this.set(Q,q,Z,X,I,K,Y,V,N,U,z,S,C,A,g,b)}roundClean(){e.fill(0),$8.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}var W8=G8(()=>new z0);function x8($){return $ instanceof Uint8Array||$!=null&&typeof $===\"object\"&&$.constructor.name===\"Uint8Array\"}function _8($){if(!x8($))throw new Error(\"Uint8Array expected\")}function B8($){_8($);let J=\"\";for(let Q=0;Q<$.length;Q++)J+=E$[$[Q]];return J}function T0($){if(typeof $!==\"string\")throw new Error(\"hex string expected, got \"+typeof $);return BigInt($===\"\"?\"0\":`0x${$}`)}function U0($){if($>=s._0&&$<=s._9)return $-s._0;if($>=s._A&&$<=s._F)return $-(s._A-10);if($>=s._a&&$<=s._f)return $-(s._a-10);return}function M0($){if(typeof $!==\"string\")throw new Error(\"hex string expected, got \"+typeof $);const J=$.length,Q=J/2;if(J%2)throw new Error(\"padded hex string expected, got unpadded hex of length \"+J);const q=new Uint8Array(Q);for(let Z=0,X=0;Z<Q;Z++,X+=2){const I=U0($.charCodeAt(X)),K=U0($.charCodeAt(X+1));if(I===void 0||K===void 0){const Y=$[X]+$[X+1];throw new Error('hex string expected, got non-hex character \"'+Y+'\" at index '+X)}q[Z]=I*16+K}return q}function O0($){return T0(B8($))}function V8($){return _8($),T0(B8(Uint8Array.from($).reverse()))}function y8($,J){return M0($.toString(16).padStart(J*2,\"0\"))}function k8($,J){return y8($,J).reverse()}function i($,J,Q){let q;if(typeof J===\"string\")try{q=M0(J)}catch(X){throw new Error(`${$} must be valid hex string, got \"${J}\". Cause: ${X}`)}else if(x8(J))q=Uint8Array.from(J);else throw new Error(`${$} must be hex string or Uint8Array`);const Z=q.length;if(typeof Q===\"number\"&&Z!==Q)throw new Error(`${$} expected ${Q} bytes, got ${Z}`);return q}function c8(...$){let J=0;for(let q=0;q<$.length;q++){const Z=$[q];_8(Z),J+=Z.length}const Q=new Uint8Array(J);for(let q=0,Z=0;q<$.length;q++){const X=$[q];Q.set(X,Z),Z+=X.length}return Q}function j8($,J,Q={}){const q=(Z,X,I)=>{const K=v$[X];if(typeof K!==\"function\")throw new Error(`Invalid validator \"${X}\", expected function`);const Y=$[Z];if(I&&Y===void 0)return;if(!K(Y,$))throw new Error(`Invalid param ${String(Z)}=${Y} (${typeof Y}), expected ${X}`)};for(let[Z,X]of Object.entries(J))q(Z,X,!1);for(let[Z,X]of Object.entries(Q))q(Z,X,!0);return $}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */var B$=BigInt(1),g$=BigInt(2),E$=Array.from({length:256},($,J)=>J.toString(16).padStart(2,\"0\")),s={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102},W0=($)=>(g$<<BigInt($-1))-B$;var v$={bigint:($)=>typeof $===\"bigint\",function:($)=>typeof $===\"function\",boolean:($)=>typeof $===\"boolean\",string:($)=>typeof $===\"string\",stringOrUint8Array:($)=>typeof $===\"string\"||x8($),isSafeInteger:($)=>Number.isSafeInteger($),array:($)=>Array.isArray($),field:($,J)=>J.Fp.isValid($),hash:($)=>typeof $===\"function\"&&Number.isSafeInteger($.outputLen)};function v($,J){const Q=$%J;return Q>=P?Q:J+Q}function x$($,J,Q){if(Q<=P||J<P)throw new Error(\"Expected power/modulo > 0\");if(Q===E)return P;let q=E;while(J>P){if(J&E)q=q*$%Q;$=$*$%Q,J>>=E}return q}function p($,J,Q){let q=$;while(J-- >P)q*=q,q%=Q;return q}function S0($,J){if($===P||J<=P)throw new Error(`invert: expected positive integers, got n=${$} mod=${J}`);let Q=v($,J),q=J,Z=P,X=E,I=E,K=P;while(Q!==P){const V=q/Q,N=q%Q,U=Z-I*V,z=X-K*V;q=Q,Q=N,Z=I,X=K,I=U,K=z}if(q!==E)throw new Error(\"invert: does not exist\");return v(Z,J)}function _$($){const J=($-E)/N8;let Q,q,Z;for(Q=$-E,q=0;Q%N8===P;Q/=N8,q++);for(Z=N8;Z<$&&x$(Z,J,$)!==$-E;Z++);if(q===1){const I=($+E)/u8;return function K(Y,V){const N=Y.pow(V,I);if(!Y.eql(Y.sqr(N),V))throw new Error(\"Cannot find square root\");return N}}const X=(Q+E)/N8;return function I(K,Y){if(K.pow(Y,J)===K.neg(K.ONE))throw new Error(\"Cannot find square root\");let V=q,N=K.pow(K.mul(K.ONE,Z),Q),U=K.pow(Y,X),z=K.pow(Y,Q);while(!K.eql(z,K.ONE)){if(K.eql(z,K.ZERO))return K.ZERO;let S=1;for(let A=K.sqr(z);S<V;S++){if(K.eql(A,K.ONE))break;A=K.sqr(A)}const C=K.pow(N,E<<BigInt(V-S-1));N=K.sqr(C),U=K.mul(U,C),z=K.mul(z,N),V=S}return U}}function y$($){if($%u8===f$){const J=($+E)/u8;return function Q(q,Z){const X=q.pow(Z,J);if(!q.eql(q.sqr(X),Z))throw new Error(\"Cannot find square root\");return X}}if($%C0===k0){const J=($-k0)/C0;return function Q(q,Z){const X=q.mul(Z,N8),I=q.pow(X,J),K=q.mul(Z,I),Y=q.mul(q.mul(K,N8),I),V=q.mul(K,q.sub(Y,q.ONE));if(!q.eql(q.sqr(V),Z))throw new Error(\"Cannot find square root\");return V}}if($%b$===F$);return _$($)}function H0($){const J={ORDER:\"bigint\",MASK:\"bigint\",BYTES:\"isSafeInteger\",BITS:\"isSafeInteger\"},Q=c$.reduce((q,Z)=>{return q[Z]=\"function\",q},J);return j8($,Q)}function u$($,J,Q){if(Q<P)throw new Error(\"Expected power > 0\");if(Q===P)return $.ONE;if(Q===E)return J;let q=$.ONE,Z=J;while(Q>P){if(Q&E)q=$.mul(q,Z);Z=$.sqr(Z),Q>>=E}return q}function m$($,J){const Q=new Array(J.length),q=J.reduce((X,I,K)=>{if($.is0(I))return X;return Q[K]=X,$.mul(X,I)},$.ONE),Z=$.inv(q);return J.reduceRight((X,I,K)=>{if($.is0(I))return X;return Q[K]=$.mul(X,Q[K]),$.mul(X,I)},Z),Q}function m8($,J){const Q=J!==void 0?J:$.toString(2).length,q=Math.ceil(Q/8);return{nBitLength:Q,nByteLength:q}}function w0($,J,Q=!1,q={}){if($<=P)throw new Error(`Expected Field ORDER > 0, got ${$}`);const{nBitLength:Z,nByteLength:X}=m8($,J);if(X>2048)throw new Error(\"Field lengths over 2048 bytes are not supported\");const I=y$($),K=Object.freeze({ORDER:$,BITS:Z,BYTES:X,MASK:W0(Z),ZERO:P,ONE:E,create:(Y)=>v(Y,$),isValid:(Y)=>{if(typeof Y!==\"bigint\")throw new Error(`Invalid field element: expected bigint, got ${typeof Y}`);return P<=Y&&Y<$},is0:(Y)=>Y===P,isOdd:(Y)=>(Y&E)===E,neg:(Y)=>v(-Y,$),eql:(Y,V)=>Y===V,sqr:(Y)=>v(Y*Y,$),add:(Y,V)=>v(Y+V,$),sub:(Y,V)=>v(Y-V,$),mul:(Y,V)=>v(Y*V,$),pow:(Y,V)=>u$(K,Y,V),div:(Y,V)=>v(Y*S0(V,$),$),sqrN:(Y)=>Y*Y,addN:(Y,V)=>Y+V,subN:(Y,V)=>Y-V,mulN:(Y,V)=>Y*V,inv:(Y)=>S0(Y,$),sqrt:q.sqrt||((Y)=>I(K,Y)),invertBatch:(Y)=>m$(K,Y),cmov:(Y,V,N)=>N?V:Y,toBytes:(Y)=>Q?k8(Y,X):y8(Y,X),fromBytes:(Y)=>{if(Y.length!==X)throw new Error(`Fp.fromBytes: expected ${X}, got ${Y.length}`);return Q?V8(Y):O0(Y)}});return Object.freeze(K)}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */var P=BigInt(0),E=BigInt(1),N8=BigInt(2),f$=BigInt(3),u8=BigInt(4),k0=BigInt(5),C0=BigInt(8),F$=BigInt(9),b$=BigInt(16),D0=($,J)=>(v($,J)&E)===E,c$=[\"create\",\"isValid\",\"is0\",\"neg\",\"inv\",\"sqrt\",\"sqr\",\"eql\",\"add\",\"sub\",\"mul\",\"pow\",\"div\",\"addN\",\"subN\",\"mulN\",\"sqrN\"];function A0($,J){const Q=(Z,X)=>{const I=X.negate();return Z?I:X},q=(Z)=>{const X=Math.ceil(J/Z)+1,I=2**(Z-1);return{windows:X,windowSize:I}};return{constTimeNegate:Q,unsafeLadder(Z,X){let I=$.ZERO,K=Z;while(X>d$){if(X&d8)I=I.add(K);K=K.double(),X>>=d8}return I},precomputeWindow(Z,X){const{windows:I,windowSize:K}=q(X),Y=[];let V=Z,N=V;for(let U=0;U<I;U++){N=V,Y.push(N);for(let z=1;z<K;z++)N=N.add(V),Y.push(N);V=N.double()}return Y},wNAF(Z,X,I){const{windows:K,windowSize:Y}=q(Z);let{ZERO:V,BASE:N}=$;const U=BigInt(2**Z-1),z=2**Z,S=BigInt(Z);for(let C=0;C<K;C++){const A=C*Y;let g=Number(I&U);if(I>>=S,g>Y)g-=z,I+=d8;const b=A,W=A+Math.abs(g)-1,x=C%2!==0,R=g<0;if(g===0)N=N.add(Q(x,X[b]));else V=V.add(Q(R,X[W]))}return{p:V,f:N}},wNAFCached(Z,X,I,K){const Y=Z._WINDOW_SIZE||1;let V=X.get(Z);if(!V){if(V=this.precomputeWindow(Z,Y),Y!==1)X.set(Z,K(V))}return this.wNAF(Y,V,I)}}}function L0($){return H0($.Fp),j8($,{n:\"bigint\",h:\"bigint\",Gx:\"field\",Gy:\"field\"},{nBitLength:\"isSafeInteger\",nByteLength:\"isSafeInteger\"}),Object.freeze({...m8($.n,$.nBitLength),...$,...{p:$.Fp.ORDER}})}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */var d$=BigInt(0),d8=BigInt(1);function h$($){const J=L0($);return j8($,{hash:\"function\",a:\"bigint\",d:\"bigint\",randomBytes:\"function\"},{adjustScalarBytes:\"function\",domain:\"function\",uvRatio:\"function\",mapToCurve:\"function\"}),Object.freeze({...J})}function R0($){const J=h$($),{Fp:Q,n:q,prehash:Z,hash:X,randomBytes:I,nByteLength:K,h:Y}=J,V=g8<<BigInt(K*8)-c,N=Q.create,U=J.uvRatio||((G,j)=>{try{return{isValid:!0,value:Q.sqrt(G*Q.inv(j))}}catch(T){return{isValid:!1,value:h}}}),z=J.adjustScalarBytes||((G)=>G),S=J.domain||((G,j,T)=>{if(j.length||T)throw new Error(\"Contexts/pre-hash are not supported\");return G}),C=(G)=>typeof G===\"bigint\"&&h<G,A=(G,j)=>C(G)&&C(j)&&G<j,g=(G)=>G===h||A(G,V);function b(G,j){if(A(G,j))return G;throw new Error(`Expected valid scalar < ${j}, got ${typeof G} ${G}`)}function W(G){return G===h?G:b(G,q)}const x=new Map;function R(G){if(!(G instanceof O))throw new Error(\"ExtendedPoint expected\")}class O{constructor(G,j,T,k){if(this.ex=G,this.ey=j,this.ez=T,this.et=k,!g(G))throw new Error(\"x required\");if(!g(j))throw new Error(\"y required\");if(!g(T))throw new Error(\"z required\");if(!g(k))throw new Error(\"t required\")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(G){if(G instanceof O)throw new Error(\"extended point not allowed\");const{x:j,y:T}=G||{};if(!g(j)||!g(T))throw new Error(\"invalid affine point\");return new O(j,T,c,N(j*T))}static normalizeZ(G){const j=Q.invertBatch(G.map((T)=>T.ez));return G.map((T,k)=>T.toAffine(j[k])).map(O.fromAffine)}_setWindowSize(G){this._WINDOW_SIZE=G,x.delete(this)}assertValidity(){const{a:G,d:j}=J;if(this.is0())throw new Error(\"bad point: ZERO\");const{ex:T,ey:k,ez:H,et:L}=this,w=N(T*T),D=N(k*k),B=N(H*H),f=N(B*B),F=N(w*G),m=N(B*N(F+D)),_=N(f+N(j*N(w*D)));if(m!==_)throw new Error(\"bad point: equation left != right (1)\");const n=N(T*k),o=N(H*L);if(n!==o)throw new Error(\"bad point: equation left != right (2)\")}equals(G){R(G);const{ex:j,ey:T,ez:k}=this,{ex:H,ey:L,ez:w}=G,D=N(j*w),B=N(H*k),f=N(T*w),F=N(L*k);return D===B&&f===F}is0(){return this.equals(O.ZERO)}negate(){return new O(N(-this.ex),this.ey,this.ez,N(-this.et))}double(){const{a:G}=J,{ex:j,ey:T,ez:k}=this,H=N(j*j),L=N(T*T),w=N(g8*N(k*k)),D=N(G*H),B=j+T,f=N(N(B*B)-H-L),F=D+L,m=F-w,_=D-L,n=N(f*m),o=N(F*_),D8=N(f*_),H8=N(m*F);return new O(n,o,H8,D8)}add(G){R(G);const{a:j,d:T}=J,{ex:k,ey:H,ez:L,et:w}=this,{ex:D,ey:B,ez:f,et:F}=G;if(j===BigInt(-1)){const t8=N((H-k)*(B+D)),s8=N((H+k)*(B-D)),f8=N(s8-t8);if(f8===h)return this.double();const e8=N(L*g8*F),$0=N(w*g8*f),J0=$0+e8,Q0=s8+t8,q0=$0-e8,t0=N(J0*f8),s0=N(Q0*q0),e0=N(J0*q0),$$=N(f8*Q0);return new O(t0,s0,$$,e0)}const m=N(k*D),_=N(H*B),n=N(w*T*F),o=N(L*f),D8=N((k+H)*(D+B)-m-_),H8=o-n,n8=o+n,o8=N(_-j*m),r0=N(D8*H8),a0=N(n8*o8),n0=N(D8*o8),o0=N(H8*n8);return new O(r0,a0,o0,n0)}subtract(G){return this.add(G.negate())}wNAF(G){return y.wNAFCached(this,x,G,O.normalizeZ)}multiply(G){const{p:j,f:T}=this.wNAF(b(G,q));return O.normalizeZ([j,T])[0]}multiplyUnsafe(G){let j=W(G);if(j===h)return u;if(this.equals(u)||j===c)return this;if(this.equals(r))return this.wNAF(j).p;return y.unsafeLadder(this,j)}isSmallOrder(){return this.multiplyUnsafe(Y).is0()}isTorsionFree(){return y.unsafeLadder(this,q).is0()}toAffine(G){const{ex:j,ey:T,ez:k}=this,H=this.is0();if(G==null)G=H?l$:Q.inv(k);const L=N(j*G),w=N(T*G),D=N(k*G);if(H)return{x:h,y:c};if(D!==c)throw new Error(\"invZ was invalid\");return{x:L,y:w}}clearCofactor(){const{h:G}=J;if(G===c)return this;return this.multiplyUnsafe(G)}static fromHex(G,j=!1){const{d:T,a:k}=J,H=Q.BYTES;G=i(\"pointHex\",G,H);const L=G.slice(),w=G[H-1];L[H-1]=w&-129;const D=V8(L);if(D===h);else if(j)b(D,V);else b(D,Q.ORDER);const B=N(D*D),f=N(B-c),F=N(T*B-k);let{isValid:m,value:_}=U(f,F);if(!m)throw new Error(\"Point.fromHex: invalid y coordinate\");const n=(_&c)===c,o=(w&128)!==0;if(!j&&_===h&&o)throw new Error(\"Point.fromHex: x=0 and x_0=1\");if(o!==n)_=N(-_);return O.fromAffine({x:_,y:D})}static fromPrivateKey(G){return a(G).point}toRawBytes(){const{x:G,y:j}=this.toAffine(),T=k8(j,Q.BYTES);return T[T.length-1]|=G&c?128:0,T}toHex(){return B8(this.toRawBytes())}}O.BASE=new O(J.Gx,J.Gy,c,N(J.Gx*J.Gy)),O.ZERO=new O(h,c,c,h);const{BASE:r,ZERO:u}=O,y=A0(O,K*8);function q8(G){return v(G,q)}function I8(G){return q8(V8(G))}function a(G){const j=K;G=i(\"private key\",G,j);const T=i(\"hashed private key\",X(G),2*j),k=z(T.slice(0,j)),H=T.slice(j,2*j),L=I8(k),w=r.multiply(L),D=w.toRawBytes();return{head:k,prefix:H,scalar:L,point:w,pointBytes:D}}function z8(G){return a(G).pointBytes}function U8(G=new Uint8Array,...j){const T=c8(...j);return I8(X(S(T,i(\"context\",G),!!Z)))}function S8(G,j,T={}){if(G=i(\"message\",G),Z)G=Z(G);const{prefix:k,scalar:H,pointBytes:L}=a(j),w=U8(T.context,k,G),D=r.multiply(w).toRawBytes(),B=U8(T.context,D,L,G),f=q8(w+B*H);W(f);const F=c8(D,k8(f,Q.BYTES));return i(\"result\",F,K*2)}const h0=p$;function i0(G,j,T,k=h0){const{context:H,zip215:L}=k,w=Q.BYTES;if(G=i(\"signature\",G,2*w),j=i(\"message\",j),Z)j=Z(j);const D=V8(G.slice(w,2*w));let B,f,F;try{B=O.fromHex(T,L),f=O.fromHex(G.slice(0,w),L),F=r.multiplyUnsafe(D)}catch(n){return!1}if(!L&&B.isSmallOrder())return!1;const m=U8(H,f.toRawBytes(),B.toRawBytes(),j);return f.add(B.multiplyUnsafe(m)).subtract(F).clearCofactor().equals(O.ZERO)}return r._setWindowSize(8),{CURVE:J,getPublicKey:z8,sign:S8,verify:i0,ExtendedPoint:O,utils:{getExtendedPublicKey:a,randomPrivateKey:()=>I(Q.BYTES),precompute(G=8,j=O.BASE){return j._setWindowSize(G),j.multiply(BigInt(3)),j}}}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */var h=BigInt(0),c=BigInt(1),g8=BigInt(2),l$=BigInt(8),p$={zip215:!0};function n$($){const J=BigInt(10),Q=BigInt(20),q=BigInt(40),Z=BigInt(80),X=l8,K=$*$%X*$%X,Y=p(K,g0,X)*K%X,V=p(Y,i$,X)*$%X,N=p(V,r$,X)*V%X,U=p(N,J,X)*N%X,z=p(U,Q,X)*U%X,S=p(z,q,X)*z%X,C=p(S,Z,X)*S%X,A=p(C,Z,X)*S%X,g=p(A,J,X)*N%X;return{pow_p_5_8:p(g,g0,X)*$%X,b2:K}}function o$($){return $[0]&=248,$[31]&=127,$[31]|=64,$}function t$($,J){const Q=l8,q=v(J*J*J,Q),Z=v(q*q*J,Q),X=n$($*Z).pow_p_5_8;let I=v($*q*X,Q);const K=v(J*I*I,Q),Y=I,V=v(I*B0,Q),N=K===$,U=K===v(-$,Q),z=K===v(-$*B0,Q);if(N)I=Y;if(U||z)I=V;if(D0(I,Q))I=v(-I,Q);return{isValid:N||U,value:I}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */var l8=BigInt(\"57896044618658097711785492504343953926634992332820282019728792003956564819949\"),B0=BigInt(\"19681161376707505956807079304988542015446066515923890162744021073123829784752\"),YQ=BigInt(0),i$=BigInt(1),g0=BigInt(2),IQ=BigInt(3),r$=BigInt(5),a$=BigInt(8);var s$=(()=>w0(l8,void 0,!0))(),e$=(()=>({a:BigInt(-1),d:BigInt(\"37095705934669439343138083508754565189542113879843219016388785533085940283555\"),Fp:s$,n:BigInt(\"7237005577332262213973186563042994240857116359379907606001950938285454250989\"),h:a$,Gx:BigInt(\"15112221349535400772501151409588531511454012693041857206046113283949847762202\"),Gy:BigInt(\"46316835694926478169428394003475163141307993866256225615783033603165251855960\"),hash:W8,randomBytes:K0,adjustScalarBytes:o$,uvRatio:t$}))(),E8=(()=>R0(e$))();class p8 extends O8{constructor($,J){super();this.finished=!1,this.destroyed=!1,Z0($);const Q=M8(J);if(this.iHash=$.create(),typeof this.iHash.update!==\"function\")throw new Error(\"Expected instance of class which extends utils.Hash\");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const q=this.blockLen,Z=new Uint8Array(q);Z.set(Q.length>q?$.create().update(Q).digest():Q);for(let X=0;X<Z.length;X++)Z[X]^=54;this.iHash.update(Z),this.oHash=$.create();for(let X=0;X<Z.length;X++)Z[X]^=106;this.oHash.update(Z),Z.fill(0)}update($){return K8(this),this.iHash.update($),this}digestInto($){K8(this),d($,this.outputLen),this.finished=!0,this.iHash.digestInto($),this.oHash.update($),this.oHash.digestInto($),this.destroy()}digest(){const $=new Uint8Array(this.oHash.outputLen);return this.digestInto($),$}_cloneInto($){$||($=Object.create(Object.getPrototypeOf(this),{}));const{oHash:J,iHash:Q,finished:q,destroyed:Z,blockLen:X,outputLen:I}=this;return $=$,$.finished=q,$.destroyed=Z,$.blockLen=X,$.outputLen=I,$.oHash=J._cloneInto($.oHash),$.iHash=Q._cloneInto($.iHash),$}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}var v8=($,J,Q)=>new p8($,J).update(Q).digest();v8.create=($,J)=>new p8($,J);function E0($,J,Q,q){if($===0)return J^Q^q;else if($===1)return J&Q|~J&q;else if($===2)return(J|~Q)^q;else if($===3)return J&q|Q&~q;else return J^(Q|~q)}var $J=new Uint8Array([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),v0=new Uint8Array(new Array(16).fill(0).map(($,J)=>J)),JJ=v0.map(($)=>(9*$+5)%16),h8=[v0],i8=[JJ];for(let $=0;$<4;$++)for(let J of[h8,i8])J.push(J[$].map((Q)=>$J[Q]));var P0=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map(($)=>new Uint8Array($)),QJ=h8.map(($,J)=>$.map((Q)=>P0[J][Q])),qJ=i8.map(($,J)=>$.map((Q)=>P0[J][Q])),XJ=new Uint32Array([0,1518500249,1859775393,2400959708,2840853838]),ZJ=new Uint32Array([1352829926,1548603684,1836072691,2053994217,0]),P8=new Uint32Array(16);class f0 extends Z8{constructor(){super(64,20,8,!0);this.h0=1732584193,this.h1=-271733879,this.h2=-1732584194,this.h3=271733878,this.h4=-1009589776}get(){const{h0:$,h1:J,h2:Q,h3:q,h4:Z}=this;return[$,J,Q,q,Z]}set($,J,Q,q,Z){this.h0=$|0,this.h1=J|0,this.h2=Q|0,this.h3=q|0,this.h4=Z|0}process($,J){for(let z=0;z<16;z++,J+=4)P8[z]=$.getUint32(J,!0);let Q=this.h0|0,q=Q,Z=this.h1|0,X=Z,I=this.h2|0,K=I,Y=this.h3|0,V=Y,N=this.h4|0,U=N;for(let z=0;z<5;z++){const S=4-z,C=XJ[z],A=ZJ[z],g=h8[z],b=i8[z],W=QJ[z],x=qJ[z];for(let R=0;R<16;R++){const O=T8(Q+E0(z,Z,I,Y)+P8[g[R]]+C,W[R])+N|0;Q=N,N=Y,Y=T8(I,10)|0,I=Z,Z=O}for(let R=0;R<16;R++){const O=T8(q+E0(S,X,K,V)+P8[b[R]]+A,x[R])+U|0;q=U,U=V,V=T8(K,10)|0,K=X,X=O}}this.set(this.h1+I+V|0,this.h2+Y+U|0,this.h3+N+q|0,this.h4+Q+X|0,this.h0+Z+K|0)}roundClean(){P8.fill(0)}destroy(){this.destroyed=!0,this.buffer.fill(0),this.set(0,0,0,0,0)}}var F0=G8(()=>new f0);var NJ=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),J8=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Q8=new Uint32Array(64);class b0 extends Z8{constructor(){super(64,32,8,!1);this.A=J8[0]|0,this.B=J8[1]|0,this.C=J8[2]|0,this.D=J8[3]|0,this.E=J8[4]|0,this.F=J8[5]|0,this.G=J8[6]|0,this.H=J8[7]|0}get(){const{A:$,B:J,C:Q,D:q,E:Z,F:X,G:I,H:K}=this;return[$,J,Q,q,Z,X,I,K]}set($,J,Q,q,Z,X,I,K){this.A=$|0,this.B=J|0,this.C=Q|0,this.D=q|0,this.E=Z|0,this.F=X|0,this.G=I|0,this.H=K|0}process($,J){for(let N=0;N<16;N++,J+=4)Q8[N]=$.getUint32(J,!1);for(let N=16;N<64;N++){const U=Q8[N-15],z=Q8[N-2],S=l(U,7)^l(U,18)^U>>>3,C=l(z,17)^l(z,19)^z>>>10;Q8[N]=C+Q8[N-7]+S+Q8[N-16]|0}let{A:Q,B:q,C:Z,D:X,E:I,F:K,G:Y,H:V}=this;for(let N=0;N<64;N++){const U=l(I,6)^l(I,11)^l(I,25),z=V+U+G0(I,K,Y)+NJ[N]+Q8[N]|0,C=(l(Q,2)^l(Q,13)^l(Q,22))+V0(Q,q,Z)|0;V=Y,Y=K,K=I,I=X+z|0,X=Z,Z=q,q=Q,Q=z+C|0}Q=Q+this.A|0,q=q+this.B|0,Z=Z+this.C|0,X=X+this.D|0,I=I+this.E|0,K=K+this.F|0,Y=Y+this.G|0,V=V+this.H|0,this.set(Q,q,Z,X,I,K,Y,V)}roundClean(){Q8.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}var x0=G8(()=>new b0);function y0($,...J){if(typeof $===\"string\")$=I0($);return d($,...J),$}/*! micro-key-producer - MIT License (c) 2024 Paul Miller (paulmillr.com) */var YJ=A8(\"ed25519 seed\"),r8=2147483648,_0=new Uint8Array([0]),IJ=($)=>F0(x0($)),KJ=($)=>X8($).getUint32(0,!1),a8=($)=>{if(!Number.isSafeInteger($)||$<0||$>4294967295)throw new Error(`Invalid number=${$}. Should be from 0 to 2 ** 32 - 1`);const J=new Uint8Array(4);return X8(J).setUint32(0,$,!1),J};class C8{get publicKeyRaw(){return E8.getPublicKey(this.privateKey)}get publicKey(){return L8(_0,this.publicKeyRaw)}get pubHash(){return IJ(this.publicKey)}get fingerprint(){return KJ(this.pubHash)}get fingerprintHex(){return F8(a8(this.fingerprint))}get parentFingerprintHex(){return F8(a8(this.parentFingerprint))}static fromMasterSeed($){if($=y0($),8*$.length<128||8*$.length>512)throw new Error(`HDKey: wrong seed length=${$.length}. Should be between 128 and 512 bits; 256 bits is advised)`);const J=v8(W8,YJ,$);return new C8({privateKey:J.slice(0,32),chainCode:J.slice(32)})}constructor($){if(this.depth=0,this.index=0,this.parentFingerprint=0,!$||typeof $!==\"object\")throw new Error(\"HDKey.constructor must not be called directly\");if(d($.privateKey,32),d($.chainCode,32),this.depth=$.depth||0,this.index=$.index||0,this.parentFingerprint=$.parentFingerprint||0,!this.depth){if(this.parentFingerprint||this.index)throw new Error(\"HDKey: zero depth with non-zero index/parent fingerprint\")}this.chainCode=$.chainCode,this.privateKey=$.privateKey}derive($,J=!1){if(!/^[mM]'?/.test($))throw new Error('Path must start with \"m\" or \"M\"');if(/^[mM]'?$/.test($))return this;const Q=$.replace(/^[mM]'?\\//,\"\").split(\"/\");let q=this;for(let Z of Q){const X=/^(\\d+)('?)$/.exec(Z);if(!X||X.length!==3)throw new Error(`Invalid child index: ${Z}`);let I=+X[1];if(!Number.isSafeInteger(I)||I>=r8)throw new Error(\"Invalid index\");if(J||X[2]===\"'\")I+=r8;q=q.deriveChild(I)}return q}deriveChild($){if($<r8)throw new Error(`Non-hardened child derivation not possible for Ed25519 (index=${$})`);const J=L8(_0,this.privateKey,a8($)),Q=v8(W8,this.chainCode,J);return new C8({chainCode:Q.slice(32),depth:this.depth+1,parentFingerprint:this.fingerprint,index:$,privateKey:Q.slice(0,32)})}sign($){return E8.sign($,this.privateKey)}verify($,J){return J=y0(J,64),E8.verify(J,$,this.publicKeyRaw)}}function p0($){try{const J=new Y8($);return Y8.isOnCurve(J.toBuffer())}catch(J){return!1}}function wJ({phrase:$,derivationPath:J=SJ.SOL}){const Q=GJ($),q=C8.fromMasterSeed(Q);return WJ.fromSeed(q.derive(J,!0).privateKey)}function AJ($){return $.publicKey.toString()}async function LJ({connection:$,address:J}){const Q=await $.getTokenAccountsByOwner(new Y8(J),{programId:jJ}),q=[];for await(let Z of Q.value){const X=VJ.decode(Z.account.data),{decimals:I,address:K}=await MJ($,X.mint);if(X.amount>BigInt(0))q.push(new d0({value:HJ.fromBigInt(X.amount,I),decimal:I,identifier:`${l0.Solana}.TOKEN-${K.toString()}`}))}return q}function RJ($){return async(J)=>{const Q=await $.getBalance(new Y8(J)),q=await LJ({connection:$,address:J});return[d0.from({chain:l0.Solana,value:BigInt(Q)}),...q]}}async function BJ({tokenAddress:$,recipient:J,from:Q,connection:q,amount:Z,decimals:X}){const I=new m0,K=new Y8($),Y=await c0(K,Q),V=new Y8(J),N=await c0(K,V);try{return await TJ(q,N),I.add(UJ(Y,K,N,Q,Z,X))}catch(U){return I.add(zJ(Q,N,V,K))}}function gJ($){return async({recipient:J,assetValue:Q,fromKeypair:q})=>{if(!p0(J))throw new u0(\"core_transaction_invalid_sender_address\");const Z=Q.isGasAsset?new m0().add(kJ.transfer({fromPubkey:q.publicKey,lamports:Q.getValue(\"number\"),toPubkey:new Y8(J)})):Q.address?await BJ({amount:Q.getValue(\"number\"),connection:$,decimals:Q.decimal,from:q.publicKey,recipient:J,tokenAddress:Q.address}):void 0;if(!Z)throw new u0(\"core_transaction_invalid_sender_address\");const X=await $.getLatestBlockhash();return Z.recentBlockhash=X.blockhash,Z.feePayer=q.publicKey,CJ($,Z,[q])}}var EJ=({rpcUrl:$=DJ.Solana}={})=>{const J=new OJ($,\"confirmed\");return{createKeysForPath:wJ,getAddressFromKeys:AJ,getBalance:RJ(J),transfer:gJ(J),validateAddress:p0}};export{EJ as SOLToolbox};\n\n//# debugId=1F27F4D1CC7A3EE264756E2164756E21\n"],"names":["number","n","Number","isSafeInteger","Error","bytes","b","lengths","a","Uint8Array","constructor","name","length","includes","hash","h","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","createView","arr","DataView","buffer","byteOffset","byteLength","Uint32Array","toBytes","data","str","TextEncoder","encode","utf8ToBytes","abytes","Hash","clone","this","_cloneInto","toStr","toString","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","HMAC","_key","super","assertHash","key","iHash","pad","set","i","oHash","fill","buf","assertExists","digestInto","assertBytes","destroy","to","Object","getPrototypeOf","hmac","message","pbkdf2Init","_password","_salt","_opts","opts","defaults","undefined","call","assign","checkOpts","dkLen","asyncTick","c","assertNumber","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","u","HashMD","padOffset","isLE","pos","view","len","take","Math","subarray","process","dataView","roundClean","value","setBigUint64","_32n","BigInt","_u32_max","wh","wl","l","setUint32","oview","outLen","state","get","res","slice","U32_MASK64","fromBig","le","u64","split","lst","Ah","Al","toBig","shrSH","_l","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","offset","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","nfkd","TypeError","normalize","norm","words","passphrase","mnemonicToSeedSync","mnemonic","ti","Ti","setInt32","ui","pbkdf2","X0","$","d","J","J$","K8","w8","globalThis","crypto","F8","Q","Q$","Y0","t","_0","_9","_A","_F","_a","_f","A8","M8","L8","q","Z","X","G8","K0","getRandomValues","X8","T8","Array","from","padStart","O8","G0","V0","Z8","I","K","N0","N","Y","V","q$","j0","R8","b8","M","Z$","N$","Y$","I$","K$","G$","V$","j$","z$","U$","T$","M$","O$","k$","C$","S$","D$","w$","H$","L$","R$","e","$8","z0","U","z","S","C","A","W","x","R","O","r","y","q8","I8","z8","g","U8","S8","W8","x8","_8","B8","E$","T0","U0","M0","charCodeAt","V8","reverse","y8","k8","c8","j8","v$","String","entries","B$","g$","W0","bigint","function","boolean","string","stringOrUint8Array","array","isArray","field","Fp","isValid","v","P","x$","E","p","S0","y$","u8","f$","pow","eql","sqr","C0","k0","mul","N8","sub","ONE","neg","ZERO","_$","m8","nBitLength","nByteLength","ceil","w0","freeze","ORDER","BITS","BYTES","MASK","is0","isOdd","u$","div","sqrN","addN","subN","mulN","inv","sqrt","invertBatch","reduce","reduceRight","m$","cmov","fromBytes","O0","c$","L0","H0","Gx","Gy","d$","d8","R0","randomBytes","adjustScalarBytes","domain","uvRatio","mapToCurve","h$","prehash","g8","G","j","T","Map","k","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","_setWindowSize","_WINDOW_SIZE","delete","assertValidity","H","L","w","D","B","f","F","equals","negate","double","m","_","o","D8","H8","t8","s8","f8","e8","$0","J0","Q0","q0","t0","s0","e0","$$","n8","o8","r0","a0","n0","o0","subtract","wNAF","wNAFCached","multiply","multiplyUnsafe","unsafeLadder","isSmallOrder","isTorsionFree","l$","clearCofactor","fromHex","fromPrivateKey","point","toRawBytes","toHex","BASE","windows","windowSize","constTimeNegate","precomputeWindow","push","abs","A0","head","prefix","scalar","pointBytes","h0","p$","CURVE","getPublicKey","sign","context","verify","zip215","ExtendedPoint","utils","getExtendedPublicKey","randomPrivateKey","precompute","o$","t$","l8","g0","i$","r$","pow_p_5_8","b2","n$","B0","D0","a$","s$","E8","p8","Z0","v8","E0","$J","v0","JJ","h8","i8","P0","QJ","qJ","XJ","ZJ","P8","f0","h1","h2","h3","h4","F0","NJ","J8","Q8","b0","x0","y0","I0","YJ","r8","a8","C8","publicKeyRaw","privateKey","publicKey","pubHash","fingerprint","fingerprintHex","parentFingerprintHex","parentFingerprint","fromMasterSeed","chainCode","depth","index","derive","test","replace","exec","deriveChild","p0","Y8","isOnCurve","toBuffer","wJ","phrase","derivationPath","SJ","SOL","GJ","WJ","fromSeed","AJ","RJ","async","getBalance","connection","address","getTokenAccountsByOwner","programId","jJ","VJ","decode","account","decimals","MJ","mint","amount","d0","HJ","fromBigInt","decimal","identifier","l0","Solana","LJ","chain","gJ","recipient","assetValue","fromKeypair","u0","isGasAsset","m0","kJ","transfer","fromPubkey","lamports","getValue","toPubkey","tokenAddress","c0","TJ","UJ","zJ","BJ","getLatestBlockhash","recentBlockhash","blockhash","feePayer","CJ","EJ","rpcUrl","DJ","OJ","createKeysForPath","getAddressFromKeys","validateAddress"],"sourceRoot":""}