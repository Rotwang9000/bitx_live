"use strict";(globalThis.webpackChunkwinbit32=globalThis.webpackChunkwinbit32||[]).push([[51],{9051:(e,t,n)=>{n.d(t,{Network:()=>u,createKeyring:()=>y,getToolboxByChain:()=>S});var r=n(96252),a=n(97716),i=n(74941),s=n(20381),o=n(32293),c=n(34311),d=n(49493),l=n(60415),g=n(86719),p=n(86026),u={DOT:{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},FLIP:{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},GENERIC:{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"}},w=function(e,t){return(0,a.qv)(e)?(0,i.V)(e):(0,o.F)(e,void 0,t)},f=function(e,t="ss58",n){return"hex"===t?(0,s.X)(e):(0,c.j)(e,n)},m=e=>"address"in e,y=async(e,t)=>(await(0,d.C)(),new r.S({type:"sr25519",ss58Format:t}).addFromUri(e)),h=(e,t)=>e.rpc.system.accountNextIndex(t),b=(e,t)=>{try{const n=w(e,t);return f(n,"ss58",t),!0}catch(n){return!1}},k=(e,{recipient:t,amount:n})=>e.tx.balances?.transferAllowDeath?.(t,n),v=({api:e,network:t,gasAsset:n,signer:r})=>({api:e,network:t,decodeAddress:w,encodeAddress:f,createKeyring:e=>y(e,t.prefix),getAddress:(e=r)=>m(e)?e.address:void 0,createTransfer:({recipient:t,assetValue:n})=>k(e,{recipient:t,amount:n.getBaseValue("number")}),getBalance:t=>(async(e,t,n)=>{const r=await(e.query.system?.account?.(n));return!r?.data?.free||r?.data?.isEmpty?[t.set(0)]:[t.set(l.Lm.fromBigInt(BigInt(r.data.free.toString()),t.decimal).getValue("string"))]})(e,n,t),validateAddress:e=>b(e,t.prefix),transfer:t=>(async(e,t,{recipient:n,assetValue:r,from:a})=>{const i=k(e,{recipient:n,amount:r.getBaseValue("number")}),s=m(t);if(!i)return;const o=a||(s?t.address:void 0);if(!o)throw new l.Oo("core_transaction_invalid_sender_address");const c=await h(e,o);return(await i.signAndSend(s?t:o,{signer:s?void 0:t,nonce:c}))?.toString()})(e,r,t),estimateTransactionFee:t=>(async(e,t,n,{recipient:r,assetValue:a,from:i})=>{const s=k(e,{recipient:r,amount:a.getBaseValue("number")}),o=i||m(t)&&t.address;if(!o)return;const c=await(s?.paymentInfo(o,{nonce:await h(e,o)}))||{partialFee:0};return n.set(l.Lm.fromBigInt(BigInt(c.partialFee.toString()),n.decimal).getValue("string"))})(e,r,n,t),sign:e=>{if(m(r))return(async(e,t)=>await t.signAsync(e))(r,e);throw new l.Oo("core_wallet_not_keypair_wallet","Signer does not have keyring pair capabilities required for signing.")},broadcast:(e,t)=>(async(e,t)=>t?e.send(t):(await e.send()).toString())(e,t),signAndBroadcast:(e,t)=>{if(m(r))return((e,t,n)=>n?t.signAndSend(e,n):t.signAndSend(e).toString())(r,e,t);throw new l.Oo("core_wallet_not_keypair_wallet","Signer does not have keyring pair capabilities required for signing.")}}),A=async({providerUrl:e,generic:t,chain:n,signer:r})=>{const a=new g.E(e),i=await p.G.create({provider:a}),s=l.An.from({chain:n});return v({api:i,signer:r,gasAsset:s,network:t?u.GENERIC:u[n]})},B=async({providerUrl:e,signer:t,generic:n=!1})=>{const r=new g.E(e),a=await p.G.create({provider:r}),i=l.An.from({chain:l.sW.Chainflip});return{...await A({chain:l.sW.Chainflip,signer:t,providerUrl:e,generic:n}),getBalance:async e=>async function(e,t){const{balance:n}=await(e.query.flip?.account?.(t));return[i.set(l.Lm.fromBigInt(BigInt(n.toString()),i.decimal).getValue("string"))]}(a,e)}},S=(e,t)=>{switch(e){case l.sW.Chainflip:return B(t);case l.sW.Polkadot:return(({providerUrl:e,signer:t,generic:n=!1})=>A({providerUrl:e||l.vl.Polkadot,chain:l.sW.Polkadot,generic:n,signer:t}))(t);default:throw new Error(`Chain ${e} is not supported`)}}}}]);
//# sourceMappingURL=51.c2958ce1.chunk.js.map